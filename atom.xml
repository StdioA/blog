<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stdio&#39;s Blog</title>
  <subtitle>随便写写</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//blog.stdioa.com/"/>
  <updated>2016-04-06T09:40:29.147Z</updated>
  <id>//blog.stdioa.com/</id>
  
  <author>
    <name>David Dai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 数据库题目解答</title>
    <link href="//blog.stdioa.com/2016/04/leetcode-database-solutions/"/>
    <id>//blog.stdioa.com/2016/04/leetcode-database-solutions/</id>
    <published>2016-04-06T08:02:00.000Z</published>
    <updated>2016-04-06T09:40:29.147Z</updated>
    
    <content type="html">&lt;p&gt;前两天重刷了《SQL必知必会》，昨天想到了 LeetCode，于是去刷了几道数据库的题目，开了不少脑洞。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;今天把答案整理一下。喔，题库在&lt;a href=&quot;https://leetcode.com/problemset/database/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;175-combine-two-tables&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/combine-two-tables/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;175. Combine Two Tables&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;样例中有些人的 &lt;code&gt;PersonId&lt;/code&gt; 无法在 &lt;code&gt;Address&lt;/code&gt; 表中找到，所以使用 &lt;code&gt;LEFT JOIN&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; FirstName, LastName, City, State&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Person&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;JOIN&lt;/span&gt; Address&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; Person.PersonId = Address.PersonId;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;176-second-highest-salary&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/second-highest-salary/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;176. Second Highest Salary&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;UNION&lt;/code&gt; 查询，在结果的最后添加一个 &lt;code&gt;NULL&lt;/code&gt;, 若不存在第二高的薪水则会选择 &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; Salary &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; Salary &lt;span class=&quot;keyword&quot;&gt;DESC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;177-nth-highest-salary&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/nth-highest-salary/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;177. Nth Highest Salary&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这个不知道为什么不可以用 &lt;code&gt;LIMIT 1, N-1&lt;/code&gt;，所以用了 &lt;code&gt;IF&lt;/code&gt; 函数。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FUNCTION&lt;/span&gt; getNthHighestSalary(N &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;BEGIN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;RETURN&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      # Write your MySQL &lt;span class=&quot;keyword&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;statement&lt;/span&gt; below&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;COUNT&lt;/span&gt;(*) &amp;gt;= N, &lt;span class=&quot;keyword&quot;&gt;MIN&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;rank&lt;/span&gt;.Salary), &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DISTINCT&lt;/span&gt; Salary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; Salary &lt;span class=&quot;keyword&quot;&gt;DESC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;LIMIT&lt;/span&gt; N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ) &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;rank&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;END&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;178-rank-scores&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/rank-scores/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;178. Rank Scores&lt;/a&gt;&lt;/h1&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; Score, (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COUNT&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;DISTINCT&lt;/span&gt; Score)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Scores &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; o.Score &amp;lt;= c.Score      # 统计比已选分数小的分数个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Rank&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Scores &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; Score &lt;span class=&quot;keyword&quot;&gt;DESC&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;180-consecutive-numbers&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/consecutive-numbers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;180. Consecutive Numbers&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;暴力查询😂&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DISTINCT&lt;/span&gt; l1.&lt;span class=&quot;keyword&quot;&gt;Num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; ConsecutiveNums&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Logs&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; l1, &lt;span class=&quot;keyword&quot;&gt;Logs&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; l2, &lt;span class=&quot;keyword&quot;&gt;Logs&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; l3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; l1.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; = l2.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; l2.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; = l3.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; l1.&lt;span class=&quot;keyword&quot;&gt;Num&lt;/span&gt; = l2.&lt;span class=&quot;keyword&quot;&gt;Num&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; l2.&lt;span class=&quot;keyword&quot;&gt;Num&lt;/span&gt; = l3.&lt;span class=&quot;keyword&quot;&gt;Num&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;181-employees-earning-more-than-their-managers&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/employees-earning-more-than-their-managers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;181. Employees Earning More Than Their Managers&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;选择雇员，根据 &lt;code&gt;ManagerId&lt;/code&gt; 找到雇员上司的薪水，然后进行比较即可。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; Salary &amp;gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; Salary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; e.&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; = Employee.ManagerId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;182-duplicate-emails&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/duplicate-emails/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;182. Duplicate Emails&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;按 &lt;code&gt;Email&lt;/code&gt; 字段进行分类，使用 &lt;code&gt;HAVING&lt;/code&gt; 筛选出相同 &lt;code&gt;Email&lt;/code&gt; 数量大于 1 的项。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; Email &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Person&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; Email&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COUNT&lt;/span&gt;(Email)&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;183-customers-who-never-order&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/customers-who-never-order/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;183. Customers Who Never Order&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这个也是直接查询…&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; c.&lt;span class=&quot;keyword&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; Customers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Customers &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COUNT&lt;/span&gt;(*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Orders&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; c.&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; = Orders.CustomerId) = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;184-department-highest-salary&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/department-highest-salary/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;184. Department Highest Salary&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;基本上就是直接查询，注意 &lt;code&gt;WHERE&lt;/code&gt; 语句中判别条件的位置，否则有可能 TLE😂&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; d.&lt;span class=&quot;keyword&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; Department,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.&lt;span class=&quot;keyword&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; Employee,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.Salary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; e, Department &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; e.DepartmentId = d.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; e.Salary = (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MAX&lt;/span&gt;(e2.Salary)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; e2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; e.DepartmentId = e2.DepartmentId);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;185-department-top-three-salaries&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/department-top-three-salaries/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;185. Department Top Three Salaries&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;输出每个部门薪资最高的三个人。这个题里有个坑，如果两个人薪资相同，那么这两个人并列，都要输出。并且如果四个人的薪资为 3 2 2 1， 薪资为 1 的那个人排第 3 😂&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; d.&lt;span class=&quot;keyword&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; Department,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.&lt;span class=&quot;keyword&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; Employee,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.Salary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; e, Department &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; e.DepartmentId = d.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COUNT&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;DISTINCT&lt;/span&gt; e2.Salary)             # 排序时允许并列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Employee &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; e2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; e.DepartmentId = e2.DepartmentId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; e.Salary &amp;lt; e2.Salary) &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;         # 比该雇员工资高的人少于三个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; Department, Salary &lt;span class=&quot;keyword&quot;&gt;DESC&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;196-delete-duplicate-emails&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/delete-duplicate-emails/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;196. Delete Duplicate Emails&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;MySQL 不允许在删除时依据待删除的表进行筛选 (You can’t specify target table’Person’ for update in FROM clause), 所以要绕一下。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 错的！！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Person&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; p2.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Person &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; p1, Person &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; p2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; p1.Email = p2.Email&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; p1.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; &amp;lt; p2.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Person&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt;(                         # 绕一下，先挑出所有满足要求的 &lt;span class=&quot;keyword&quot;&gt;ID&lt;/span&gt; 构成一个表，再从这个表中选 &lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; 进行删除&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; p2.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Person &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; p1, Person &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; p2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; p1.Email = p2.Email&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; p1.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; &amp;lt; p2.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; temp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;197-rising-temperature&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/rising-temperature/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;197. Rising Temperature&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;主要考 &lt;code&gt;MySQL&lt;/code&gt; 的日期操作函数。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; w1.&lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; Weather &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; w1, Weather &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; w2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;datediff&lt;/span&gt;(w1.&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;, w2.&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; w1.Temperature &amp;gt; w2.Temperature;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;262-trips-and-users&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/trips-and-users/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;262. Trips and Users&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;太乱了，没做😥&lt;/p&gt;
&lt;h1 id=&quot;&quot;&gt;后记&lt;/h1&gt;
&lt;p&gt;昨天花了半天写完这些题，写到最后都不知道自己在写什么了😂不过还是掌握了不少的 SQL 查询技巧，比如 &lt;code&gt;UNION SELECT NULL&lt;/code&gt; 等等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前两天重刷了《SQL必知必会》，昨天想到了 LeetCode，于是去刷了几道数据库的题目，开了不少脑洞。&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="//blog.stdioa.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="//blog.stdioa.com/tags/LeetCode/"/>
    
      <category term="数据库" scheme="//blog.stdioa.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="SQL" scheme="//blog.stdioa.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>随手记之Vue.js</title>
    <link href="//blog.stdioa.com/2016/03/essay-vue/"/>
    <id>//blog.stdioa.com/2016/03/essay-vue/</id>
    <published>2016-03-28T13:40:03.000Z</published>
    <updated>2016-04-05T01:58:01.139Z</updated>
    
    <content type="html">&lt;p&gt;之前的那门 JS 和前端课结课了，最后花了一周时间写了一个 project，使用 Vue.js 的一套工具写了一个单页面应用，先将使用到及学到的知识来整理一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;想了想，之前自己学习 &lt;code&gt;Vue.js&lt;/code&gt; 的时候一直在翻文档，翻到哪些让人眼前一亮的功能时就将它加进自己的项目里，并没有什么系统地进行学习，所以想到哪写到哪好了。前方高乱预警。&lt;/p&gt;
&lt;h1 id=&quot;1-vuejs&quot;&gt;1. Vue.js&lt;/h1&gt;
&lt;p&gt;之前用 &lt;code&gt;React&lt;/code&gt; 用得有些不爽了所以想换换口味, 于是 用&lt;a href=&quot;http://vuejs.org.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Vue.js&lt;/code&gt;&lt;/a&gt; 写了一个小应用的前端部分。它的轻量以及MVVM架构让我在两天之内爱上了它，于是决定用它代替 React 去完成 final project 的前端部分。&lt;/p&gt;
&lt;p&gt;不知道为什么，我觉得 &lt;code&gt;Vue.js&lt;/code&gt; 比 &lt;code&gt;React&lt;/code&gt; 更容易上手，所以很快就学会了它。想了想确实不知道该整理一些什么，因为 &lt;a href=&quot;http://vuejs.org.cn/guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vue 的官方教程&lt;/a&gt;写的确实很直白清楚，所以在此不再赘述，有时间的话可能会考虑写一个 Vue 的教程。&lt;/p&gt;
&lt;h1 id=&quot;2-vue-cli&quot;&gt;2. vue-cli&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vue-cli&lt;/a&gt; 是一个 Vue.js 官方提供的脚手架工具，你可以使用它来轻松地构建出一个应用 &lt;code&gt;Vue.js&lt;/code&gt; 的工程。官方提供 5 种模板，当然你也可以在 &lt;code&gt;github&lt;/code&gt; 上或者本地构建自己的模板然后使用 vue-cli 生成工程。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-cli#usage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;具体使用方法&lt;/a&gt;：生成一个工程极为简单，只需一两条命令即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ vue init webpack my-project     // 使用 webpack 模板生成工程 my-project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; my-project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm run dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，借助 &lt;code&gt;webpack&lt;/code&gt; 与 &lt;code&gt;vue-loader&lt;/code&gt;, 你可以将一个 &lt;code&gt;Vue&lt;/code&gt; 组件的模板、核心js代码和CSS写在&lt;strong&gt;一个文件里&lt;/strong&gt;，甚至还可以使用 &lt;code&gt;CSS&lt;/code&gt; 与 &lt;code&gt;HTML&lt;/code&gt; 的预处理器，像这样：
&lt;img src=&quot;http://vuejs.org.cn/images/vue-component-with-pre-processors.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
&lt;span style=&quot;font-size: 0.75em;&quot;&gt;图片来自&lt;a href=&quot;http://vuejs.org.cn/guide/application.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Vue.js 官方教程 - 构建大型应用&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-vue-router&quot;&gt;3. Vue-router&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-router/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;vue-router&lt;/code&gt;&lt;/a&gt; 是 &lt;code&gt;vue&lt;/code&gt; 官方提供的路由模块，可以实现 &lt;code&gt;SPA&lt;/code&gt; 中的路由操作。具体文档看&lt;a href=&quot;http://vuejs.github.io/vue-router/zh-cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。顺便提一句，&lt;code&gt;vue-router&lt;/code&gt; 的中文文档已经过时了。&lt;/p&gt;
&lt;h2 id=&quot;31&quot;&gt;3.1 初始化&lt;/h2&gt;
&lt;p&gt;首先使用 &lt;code&gt;npm&lt;/code&gt; 安装 &lt;code&gt;vue-router&lt;/code&gt;, 然后在程序入口点配置 &lt;code&gt;vue-router&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Vue &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Router &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue-router&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; App &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./components/App&#39;&lt;/span&gt;                    &lt;span class=&quot;comment&quot;&gt;// 程序的核心 Vue 应用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; HomePageView &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./components/HomePageView&#39;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;// 导入所有的 View 组件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ItemView &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./components/ItemView&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(Router)                                       &lt;span class=&quot;comment&quot;&gt;// Vue 配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; router = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Router()                             &lt;span class=&quot;comment&quot;&gt;// 生成路由对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.map(&amp;#123;                                          &lt;span class=&quot;comment&quot;&gt;// 配置路由&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;homepage&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    component: HomePageView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;/home&#39;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;homepage&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    component: HomePageView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;/item/:id&#39;&lt;/span&gt;: &amp;#123;                                    &lt;span class=&quot;comment&quot;&gt;// 支持动态路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;item&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    component: ItemView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.redirect(&amp;#123;                                   &lt;span class=&quot;comment&quot;&gt;// 设置重定向选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;/home&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.start(App, &lt;span class=&quot;string&quot;&gt;&#39;[app]&#39;&lt;/span&gt;)                           &lt;span class=&quot;comment&quot;&gt;// 挂载 Vue 主应用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在 &lt;code&gt;App.vue&lt;/code&gt; 的 template 中设置 &lt;code&gt;router-view&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;router-view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;keep-alive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;transition&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fade&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;transition-mode&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;out-in&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;router-view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;32-vue-router&quot;&gt;3.2 vue-router 的使用&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Vue Router&lt;/code&gt; 对象被嵌入到每个 &lt;code&gt;vue&lt;/code&gt; 组件中，可以在组件中调用 &lt;code&gt;this.$router&lt;/code&gt; 来控制 router 对象，如进行页面跳转等。&lt;/p&gt;
&lt;p&gt;此外，还可以在页面切换时在组件的 &lt;code&gt;route&lt;/code&gt; 配置中使用路由切换钩子控制 &lt;code&gt;vue-router&lt;/code&gt;，详情请看&lt;a href=&quot;http://vuejs.github.io/vue-router/zh-cn/pipeline/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;4-vuex&quot;&gt;4. Vuex&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Vuex&lt;/code&gt;&lt;/a&gt; 是一个借鉴于 &lt;code&gt;Flux&lt;/code&gt;，但是专门为 &lt;code&gt;Vue.js&lt;/code&gt; 所设计的状态管理方案。&lt;code&gt;Flux&lt;/code&gt; 采用了 &lt;code&gt;Action → Dispatcher → Store → View&lt;/code&gt; 的状态管理机制，而 &lt;code&gt;Vuex&lt;/code&gt; 跟它差不多：Vue 组件调用 action，action dispatches mutation, mutation 改变 store 中的 state，state 改变 View. 下面是 &lt;code&gt;Vuex&lt;/code&gt; 的数据流。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://vuejs.github.io/vuex/en/vuex.png&quot; alt=&quot;Vuex Data Flow&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;41&quot;&gt;4.1 使用方法&lt;/h2&gt;
&lt;p&gt;程序入口点：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Vuex &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vuex&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(Vuex)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主应用：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; store &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../store&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store,                      &lt;span class=&quot;comment&quot;&gt;// 引用store&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其它组件：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  vuex: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 定义 getter 从 store 中获取 state 并注册至应用中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getters: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      logged_in: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;state&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state.user.logged_in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 定义 action, 组件可在自己的函数中调用 action 来 dispatch mutations.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    actions: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      login: (&amp;#123; dispatch &amp;#125;, user) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatch(&lt;span class=&quot;string&quot;&gt;&#39;LOGIN&#39;&lt;/span&gt;, user)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关于 store 及 mutation 的定义方式，请参考&lt;a href=&quot;http://vuejs.github.io/vuex/en/tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Vuex 文档&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 总结 &amp;amp; 后记&lt;/h1&gt;
&lt;p&gt;跟 React 相比，个人感觉 Vue 要更容易上手，易于使用，文档也很清楚（比 Hexo 的高到不知道那里去了，前两天被 Hexo 整疯了必须要黑一下它）；Vue 的一系列工具也很易于使用，与 Vue 整合度高，可以在组件中方便地进行操作。&lt;/p&gt;
&lt;p&gt;前端课结课，准备退坑了，过几天可能会学习并整理一些后端的知识。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前的那门 JS 和前端课结课了，最后花了一周时间写了一个 project，使用 Vue.js 的一套工具写了一个单页面应用，先将使用到及学到的知识来整理一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Javascript" scheme="//blog.stdioa.com/categories/Javascript/"/>
    
    
      <category term="前端开发" scheme="//blog.stdioa.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="Javascript" scheme="//blog.stdioa.com/tags/Javascript/"/>
    
      <category term="node.js" scheme="//blog.stdioa.com/tags/node-js/"/>
    
      <category term="vue.js" scheme="//blog.stdioa.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Atom 浅度体验感受</title>
    <link href="//blog.stdioa.com/2016/03/essay-atom-using-experience/"/>
    <id>//blog.stdioa.com/2016/03/essay-atom-using-experience/</id>
    <published>2016-03-27T02:40:03.000Z</published>
    <updated>2016-03-27T06:33:01.283Z</updated>
    
    <content type="html">&lt;p&gt;昨天看到了 Atom 官方发布了一篇 &lt;a href=&quot;http://flight-manual.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom Flight Manual&lt;/a&gt;, 看了两页觉得有些感兴趣所以下了一个体验一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;很久以前就听说了 &lt;code&gt;Atom&lt;/code&gt; 这款编辑器，Github 宣称它是&amp;quot;A hackable text editor
for the 21st Century&amp;quot;, 有些感兴趣于是就搞了一个内测码下载下来来玩了玩，但是，当时 Atom 的用户体验并不好，加上可以使用的插件少之又少，就放弃了它。昨天从微博上看到了官方的 &lt;a href=&quot;http://flight-manual.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom Flight Manual&lt;/a&gt;，决定重新体验一下这款所谓“属于 21 世纪的编辑器”。&lt;/p&gt;
&lt;p&gt;当然，作为一个使用 Sublime Text 将近 2 年的用户，我肯定会将 Atom 跟 Sublime Text（下称 ST）进行比较咯。&lt;/p&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 第一印象&lt;/h1&gt;
&lt;p&gt;一打开Atom界面，整个 UI 还是浓浓的仿 ST 风格，快捷键都基本一样，可能是因为 ST 的 UI 确实很简洁漂亮吧。&lt;br&gt;
不过 ST 是收费的（无期限评估使用也是收费），而 Atom 是免费的，这点要赞一个~当然这根本无法打消暑假购买 ST 授权码的决心。&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 启动速度&lt;/h1&gt;
&lt;p&gt;Atom 的启动速度显然跟 ST 没法比。实测在装了 15 个插件以后，Atom 的启动速度要比 ST3 慢 5 倍左右。当然，它的启动速度应该会比装了一堆插件的 ST2 快一点…ST2 的启动速度貌似是历史遗留问题了。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 用户体验&lt;/h1&gt;
&lt;p&gt;感觉 Atom 的用户体验要比上次好的多。&lt;/p&gt;
&lt;p&gt;来说一说我看好 Atom 的地方吧。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Web-Based&lt;br&gt;
Atom 编辑器是基于 V8，整个 Atom 编辑页面就是一个网页。不知道为什么，感觉网页对我来说更有亲切感😳，当然这也使得 Atom 更加容易修改，方便了插件的开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git Diff &amp;amp; Markdown Preview 集成&lt;br&gt;
Atom 自带了两个插件：&lt;code&gt;Git Diff&lt;/code&gt; 和 &lt;code&gt;Markdown Preview&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;Git Diff&lt;/code&gt; 可以实时显示当前文件的 Git Diff 信息。嗯那个 Git Diff 还是蛮漂亮的~&lt;br&gt;
&lt;img src=&quot;/pics/atom/git_diff.jpg&quot; alt=&quot;Git Diff&quot;&gt;&lt;br&gt;
&lt;code&gt;Markdown Preview&lt;/code&gt; 可以提供 Github Markdown 实时预览。然而作为一个可以对 Markdown 进行人肉编译的人，根本不需要这样的插件嗯😂&lt;br&gt;
同时，Atom 还集成了 Git 的常用功能，如当前目录所在 Git 分支。这个功能也要点个赞。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Package/Theme 安装及配置&lt;br&gt;
这点上 Atom 做的要比 ST 好得多。Atom 可以在线查看 Package 的 README 信息，每一个 Package 也有其独立的配置页面，不必像 ST 那样直接去修改配置文件。&lt;br&gt;
&lt;img src=&quot;/pics/atom/package_settings.jpg&quot; alt=&quot;Package Settings&quot;&gt;&lt;/p&gt;
&lt;p&gt;当然，Atom 自带了一个叫做 &lt;code&gt;apm&lt;/code&gt; 的包管理工具，这个就不错评价咯，人家只是浅度使用嘛（傲娇脸&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;4-hackable&quot;&gt;4. Hackable 简单体验——编辑器字体修改&lt;/h1&gt;
&lt;p&gt;之前用 ST 的时候为了将 Consolas 和微软雅黑结合起来，着实头疼了好久，到了 Atom 里，打开 Stylesheet 配置文件，一行代码搞定😆&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;atom-text-editor&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: Consolas, &lt;span class=&quot;string&quot;&gt;&quot;Microsoft Yahei&quot;&lt;/span&gt;, sans-serif;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 总结&lt;/h1&gt;
&lt;p&gt;Atom 确实比以前好用了很多。我大概不会卸载它，而是把它留在电脑里，等到 ST 用腻了可以换换口味~&lt;br&gt;
然而尝试了 Atom 并更换主题、安装了几个实用的插件以后，我还是跑到 Sublime 那里安装了类似的插件😂&lt;/p&gt;
&lt;p&gt;配置后的 Atom:&lt;br&gt;
&lt;img src=&quot;/pics/atom/atom_after.jpg&quot; alt=&quot;Atom 个性化&quot;&gt;&lt;br&gt;
使用 Atom 前的 ST:&lt;br&gt;
&lt;img src=&quot;/pics/atom/st_before.jpg&quot; alt=&quot;ST 个性化前&quot;&gt;&lt;br&gt;
使用 Atom 后，安装了插件&lt;code&gt;Color Highlighter&lt;/code&gt;, &lt;code&gt;GitGutter&lt;/code&gt; 和 &lt;code&gt;SublimeGit&lt;/code&gt;的 ST:&lt;br&gt;
&lt;img src=&quot;/pics/atom/st_after.jpg&quot; alt=&quot;ST 个性化后&quot;&gt;&lt;/p&gt;
&lt;p&gt;好吧…我把 ST 配置的像 Atom 了（摊手&lt;/p&gt;
&lt;p&gt;完。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨天看到了 Atom 官方发布了一篇 &lt;a href=&quot;http://flight-manual.atom.io/&quot;&gt;Atom Flight Manual&lt;/a&gt;, 看了两页觉得有些感兴趣所以下了一个体验一下。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="//blog.stdioa.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Git" scheme="//blog.stdioa.com/tags/Git/"/>
    
      <category term="Atom" scheme="//blog.stdioa.com/tags/Atom/"/>
    
      <category term="Sublime Text" scheme="//blog.stdioa.com/tags/Sublime-Text/"/>
    
      <category term="文本编辑器" scheme="//blog.stdioa.com/tags/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Javascript学习总结</title>
    <link href="//blog.stdioa.com/2016/02/learning-javascript/"/>
    <id>//blog.stdioa.com/2016/02/learning-javascript/</id>
    <published>2016-02-24T11:31:42.000Z</published>
    <updated>2016-03-27T06:27:19.506Z</updated>
    
    <content type="html">&lt;p&gt;从开始写Javascript到现在，已经有一个月了，这一个月学了不少新姿势，随便写写，简单整理一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1-javascript&quot;&gt;1. Javascript&lt;/h1&gt;
&lt;p&gt;这个没什么好整理的…随便写几条。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a;                          &lt;span class=&quot;comment&quot;&gt;// 防止变量作用域提升&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do_something();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;some_list.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.do_something(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);                       &lt;span class=&quot;comment&quot;&gt;// 把this传到map里面的匿名函数中，否则里面的this为undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setInterval(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;2-jquery&quot;&gt;2. jQuery&lt;/h1&gt;
&lt;h2 id=&quot;21&quot;&gt;2.1 选择器&lt;/h2&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input[type=text]&quot;&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;// 选择属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;ul&amp;gt;li:eq(3)&quot;&lt;/span&gt;)        &lt;span class=&quot;comment&quot;&gt;// 选择第4个li元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;ul&amp;gt;li&quot;&lt;/span&gt;).eq(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)        &lt;span class=&quot;comment&quot;&gt;// 选择所有&quot;ul&amp;gt;li&quot;中的第4个元素（注意与上面那个选择器的不同）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;ul&amp;gt;li:even&quot;&lt;/span&gt;)         &lt;span class=&quot;comment&quot;&gt;// 选择所有奇数li元素（odd同理）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;22&quot;&gt;2.2 杂项&lt;/h2&gt;
&lt;p&gt;获取表单内容时，要用&lt;code&gt;$(&amp;quot;...&amp;quot;).val()&lt;/code&gt;而不是&lt;code&gt;$(&amp;quot;...&amp;quot;).text()&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&quot;3-nodejs&quot;&gt;3. Node.js&lt;/h1&gt;
&lt;p&gt;不知道写什么，随便写几个好玩的库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cheerio&lt;/code&gt;, 在服务器端解析html，跟jQuery用法差不多&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalk&lt;/code&gt;, 输出彩色文字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp&lt;/code&gt;, 流式自动化构建工具，后面细写&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;4-reactjs&quot;&gt;4. React.js&lt;/h1&gt;
&lt;h2 id=&quot;41-jsxbabel&quot;&gt;4.1 JSX与Babel&lt;/h2&gt;
&lt;p&gt;JSX是一种语言，babel是一种预处理工具。
JSX可以在浏览器中转换为javascript并执行，有两个前提：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;包含了&lt;code&gt;browser.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;script标签的类型为&lt;code&gt;text/babel&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;看&lt;a href=&quot;https://facebook.github.io/react/docs/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在很久以前，JSX代码转换库包含在React库里，名叫&lt;code&gt;JSXTransformer.js&lt;/code&gt;, 那时script标签的类型为&lt;code&gt;text/jsx&lt;/code&gt;, 但是后来JSX代码改用babel来转换了，所以script标签的类型也就变为了&lt;code&gt;text/babel&lt;/code&gt;, 代码转换库也不再由React提供。&lt;/p&gt;
&lt;p&gt;吐槽：最初看tutorial的时候看的&lt;a href=&quot;http://reactjs.cn/react/docs/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文页面&lt;/a&gt;，这个页面很久很久没有更新过了，很多内容都过时了，在离线转换的时候需要安装包，npm报出一堆&lt;code&gt;package deprecated&lt;/code&gt;的信息，整个人一个大写的卧槽。后来看了上面的英文页面才知道&lt;code&gt;JSXTransformer&lt;/code&gt;已经不再使用了，现在大家都用&lt;a href=&quot;https://babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;42-react&quot;&gt;4.2 React&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮一峰大大写的React入门教程&lt;/a&gt;很不错，我基本上是看这个入门的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写JSX时，要注意DOM节点的&lt;code&gt;class&lt;/code&gt;和&lt;code&gt;for&lt;/code&gt;属性要写为&lt;code&gt;className&lt;/code&gt;和&lt;code&gt;htmlFor&lt;/code&gt;，因为&lt;code&gt;class&lt;/code&gt;和&lt;code&gt;for&lt;/code&gt;是javascript的关键字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件的生命周期：看&lt;a href=&quot;https://facebook.github.io/react/docs/working-with-the-browser.html#component-lifecycle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;，&lt;code&gt;render&lt;/code&gt;函数中&lt;strong&gt;不要&lt;/strong&gt;改变组件的state，若组件的props改变而需要相应更改state, 则要在&lt;code&gt;componentWillReceiveProps&lt;/code&gt;函数中完成state更改。函数执行完后，render函数会被执行，组件重新渲染。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;5-gulp&quot;&gt;5. gulp&lt;/h1&gt;
&lt;h2 id=&quot;51&quot;&gt;5.1 简介&lt;/h2&gt;
&lt;p&gt;流式自动化构建工具，用于各类文件的转换（如jsx→js→min.js），监控文件变化，搭建静态文件服务器等，可以类比为makefile, 拥有种类繁多的插件。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp官网&lt;/a&gt;，&lt;a href=&quot;http://www.gulpjs.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文网，包含中文文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;52&quot;&gt;5.2 操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gulp.task(name[, deps], fn)&lt;/code&gt;, 注册一个任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: 任务名称&lt;/li&gt;
&lt;li&gt;deps: 依赖的前置任务，string[]&lt;/li&gt;
&lt;li&gt;fn: 任务函数，在里面写该任务需要完成的具体事项&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gulp.src(globs[, options])&lt;/code&gt;, 输出一个满足匹配模式的stream, stream可以用pipe连接起来，类比shell的管道&lt;code&gt;|&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gulp.dest(path[, options])&lt;/code&gt;, 将stream写到某个path当中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gulp.watch(glob [, opts], tasks)&lt;/code&gt; 或 &lt;code&gt;gulp.watch(glob [, opts, cb])&lt;/code&gt;, 监控满足匹配模式的文件，若文件变化，则执行某些任务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接看一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;render&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;array&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;of&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;task&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;names&#39;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./client/templates/*.jade&#39;&lt;/span&gt;)                               &lt;span class=&quot;comment&quot;&gt;// 找到原路径所有的jade文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(jade())                                                   &lt;span class=&quot;comment&quot;&gt;// 渲染模板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./build/templates&#39;&lt;/span&gt;))                           &lt;span class=&quot;comment&quot;&gt;// 输出到某目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(minify())                                                 &lt;span class=&quot;comment&quot;&gt;// minify&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./build/minified_templates&#39;&lt;/span&gt;));                 &lt;span class=&quot;comment&quot;&gt;// 输出到另一目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;watch&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&quot;compress&quot;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; watcher = gulp.watch(&lt;span class=&quot;string&quot;&gt;&#39;./public/src/*.jsx&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;compress&#39;&lt;/span&gt;]);       &lt;span class=&quot;comment&quot;&gt;// 监控文件，若文件变化则执行compress任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    watcher.on(&lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;                             &lt;span class=&quot;comment&quot;&gt;// 监听change事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;File &#39;&lt;/span&gt; + event.path + &lt;span class=&quot;string&quot;&gt;&#39; was &#39;&lt;/span&gt; + event.type + &lt;span class=&quot;string&quot;&gt;&#39;, running tasks...&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;6-react-reactbabelgulp&quot;&gt;6. React工具集成: React+Babel+gulp&lt;/h1&gt;
&lt;p&gt;用gulp执行任务，用babel转换JSX.&lt;/p&gt;
&lt;h2 id=&quot;61-gulp&quot;&gt;6.1 gulp&lt;/h2&gt;
&lt;p&gt;所需插件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gulp&lt;/li&gt;
&lt;li&gt;gulp-babel&lt;/li&gt;
&lt;li&gt;gulp-uglify (压缩js文件用，可选)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;gulpfile:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp  = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; babel = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-babel&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uglify = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-uglify&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;transform&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/src/*.jsx&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .pipe(babel())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public/build&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&quot;compress&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&quot;transform&quot;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/build/!(*.min).js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(uglify())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(rename(&amp;#123; suffix: &lt;span class=&quot;string&quot;&gt;&quot;.min&quot;&lt;/span&gt; &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public/build&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;62-babel&quot;&gt;6.2 Babel&lt;/h2&gt;
&lt;p&gt;所需插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;babel-preset-es2015&lt;/li&gt;
&lt;li&gt;babel-preset-react&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;.babelrc&lt;/code&gt;文件：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;presets&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;es2015&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若在全局安装了&lt;code&gt;babel-cli&lt;/code&gt;，则可以用babel命令转换文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若当前目录存在上述babelrc文件：
执行&lt;code&gt;babel public\src --out-dir public\build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若当前目录不存在bebelrc文件：
执行&lt;code&gt;babel --presets react public\src --out-dir public\build&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;7-semantic-ui&quot;&gt;7. Semantic UI&lt;/h1&gt;
&lt;p&gt;超级棒的一个前端组件库，去看&lt;a href=&quot;http://www.semantic-ui.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;吧。&lt;/p&gt;
&lt;h1 id=&quot;8&quot;&gt;8. 后记&lt;/h1&gt;
&lt;p&gt;终于写完了。&lt;/p&gt;
&lt;p&gt;又一个月没有写东西了，代码写了不少，所学到的知识却没有及时整理下来。真是太懒，懒得整理知识。到现在还欠着一篇Django的生产环境配置的文章没写（其实就是一条命令+nginx配置而已），改天补上。&lt;/p&gt;
&lt;p&gt;寒假算是荒废过去了，本来能够写更多东西的，却被一些事情打乱了计划。&lt;/p&gt;
&lt;p&gt;以前觉得javascript是一门很糟糕的语言，代码写起来很乱，四五层回调看起来头都大了，但真正写了一个月以后感觉舒服了很多，很多代码写起来得心应手。JS的生态也让我很喜欢，各种工具组件层出不穷，使用起来也及其方便。&lt;/p&gt;
&lt;p&gt;这一个月所写的js项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/StdioA/carrez&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;carrez&lt;/a&gt;
前后端都有，后端Express, 解析html, 前端使用ajax和后端进行信息交互&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/StdioA/starwars&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;starwars&lt;/a&gt;
纯前端项目，使用React, 用了很久的&lt;code&gt;browser.js&lt;/code&gt;, 本地工具集成鼓捣了很久才鼓捣明白&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/StdioA/git_modifier&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git_modifier&lt;/a&gt;
算是半个JS项目（Github告诉我我这是个JS项目，因为JS代码占比最大），后端Flask, 前端React, 说是Web App其实是个本地项目，用来读取及修改本地git repo的commit信息用的，奇怪的需求，写来自己用，方便伪造commit信息，帮某人作弊😂😂😂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后面看看要不要写&lt;code&gt;Mocha&lt;/code&gt;吧。&lt;/p&gt;
&lt;p&gt;最后，郑重感谢phoenixe同学给了我一个比较系统地学习和使用javascript的机会。谢谢你。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从开始写Javascript到现在，已经有一个月了，这一个月学了不少新姿势，随便写写，简单整理一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Javascript" scheme="//blog.stdioa.com/categories/Javascript/"/>
    
    
      <category term="前端开发" scheme="//blog.stdioa.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="Javascript" scheme="//blog.stdioa.com/tags/Javascript/"/>
    
      <category term="node.js" scheme="//blog.stdioa.com/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>博客迁移记（三）</title>
    <link href="//blog.stdioa.com/2016/01/blog-migration-iii/"/>
    <id>//blog.stdioa.com/2016/01/blog-migration-iii/</id>
    <published>2016-01-20T03:40:00.000Z</published>
    <updated>2016-01-20T03:52:12.762Z</updated>
    
    <content type="html">&lt;p&gt;一个月没更新，期末复习的时候光鼓捣网站却懒得写东西，期末考完了，把这一个月鼓捣的东西记录一下，比如利用七牛进行静态文件托管。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 使用七牛托管静态文件&lt;/h1&gt;
&lt;h2 id=&quot;11&quot;&gt;1.1 背景&lt;/h2&gt;
&lt;p&gt;博客的事情处理完成后，我又做了一个网站主页，其中包括一个100KB+的背景图片。不过因为我的VPS出站带宽只有1Mb/s, 所以背景图片加载时间过长，导致网站访问速度较慢。所以我将绝大部分的资源全部挂到了七牛上，在服务器端对静态资源请求进行302跳转，将流量转移到七牛的节点，提高访问速度。&lt;/p&gt;
&lt;h2 id=&quot;12&quot;&gt;1.2 操作&lt;/h2&gt;
&lt;h3 id=&quot;121&quot;&gt;1.2.1 同步文件&lt;/h3&gt;
&lt;p&gt;我需要托管的文件包括博客和个人主页的所有图片文件。首先，我在七牛上建立了空间&lt;code&gt;cdn-stdioa&lt;/code&gt;并绑定了个人域名、申请了HTTPS域名。为方便将本地文件与七牛空间同步，七牛提供了命令行同步工具&lt;code&gt;qrsync&lt;/code&gt;. 查看&lt;a href=&quot;http://developer.qiniu.com/docs/v6/tools/qrsync.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;后，我新建并修改了配置文件&lt;code&gt;sync_conf.json&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;src&quot;&lt;/span&gt;:          &lt;span class=&quot;string&quot;&gt;&quot;blog/source/pics&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;dest&quot;&lt;/span&gt;:         &lt;span class=&quot;string&quot;&gt;&quot;qiniu:access_key=&amp;lt;your_access_key&amp;gt;&amp;amp;secret_key=&amp;lt;your_secret&amp;gt;key&amp;gt;&amp;amp;bucket=cdn-stdioa&amp;amp;key_prefix=blog/pics/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;debug_level&quot;&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若添加资源，则执行&lt;code&gt;qrsync sync_conf.json&lt;/code&gt;, 即可完成静态资源与七牛空间的自动同步。&lt;/p&gt;
&lt;h3 id=&quot;122&quot;&gt;1.2.2 在服务器端设置跳转&lt;/h3&gt;
&lt;p&gt;为了提高访问速度，需要在nginx端将所有指向图片的请求全部跳转到七牛的链接上。学习了一下location重定向规则，直接上配置文件吧。&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt; ^~&lt;/span&gt; /pics &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;return&lt;/span&gt; https://xxx.qnssl.com/blog&lt;span class=&quot;variable&quot;&gt;$request_uri&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，就可以将所有指向&lt;code&gt;/pics&lt;/code&gt;的请求全部重定向到七牛的链接。顺便，在七牛设置了一下防盗链。&lt;/p&gt;
&lt;h2 id=&quot;13-git-hook&quot;&gt;1.3 效率提升——Git hook&lt;/h2&gt;
&lt;p&gt;因为我的博客和个人主页都是使用Coding+webhook部署的，所以每次更改页面后要推代码，还要同步静态资源。有没有方法可以把这两条操作简化一下呢？一开始写了个批处理脚本，后来觉得一定有更好的办法，于是翻了翻，遇到了&lt;code&gt;Git hook&lt;/code&gt;这种神器。
&lt;code&gt;Git hook&lt;/code&gt;跟webhook类似，都是在某个操作上挂一个“钩子”，使得在进行某操作发生时自动触发自定义脚本来达到某些目的，实现快捷操作。所有的钩子均在&lt;code&gt;.git/hooks&lt;/code&gt;目录下，在该目录下设置特殊文件名的脚本文件来设置钩子。因为我需要在推送代码之前进行资源同步，所以我需要设置&lt;code&gt;pre-push&lt;/code&gt;脚本。脚本内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Sync up the static resources with Qiniu...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /f/websites/blog/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qrsync sync_conf.json 2&amp;gt;&amp;gt;sync.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Done!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，我就可以在每次执行&lt;code&gt;git push&lt;/code&gt;之前自动同步静态资源，少敲一条命令，提升工作效率→_→&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 谱站搭建&lt;/h1&gt;
&lt;p&gt;内容不是太多，就写在这里啦。
我有一个乐谱分享站，里面存放一些自己收集的钢琴谱。一年以前写了一个程序，用来为每个文件夹生成index页面。前几天翻开那个程序，一下子被自己写的连环replace吓到了（那个时候连正则还都不会，不过转念一想要是会了正则，写出来的东西会多可怕😂），于是怒用&lt;code&gt;Jinja&lt;/code&gt;模板渲染引擎重写了一个，把原来最核心部分的十几行代码变为了一行渲染语句，代码看起来清爽多了。
嗯，具体链接可以在左侧或顶栏的“友情链接”中找。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 后记&lt;/h1&gt;
&lt;p&gt;历经一个月，博客的迁移工作基本完成（刚刚写博客的工夫还给它添加了&lt;code&gt;twemoji&lt;/code&gt;支持😶），以后还要做个人页面，不过可能不会有太多可写的地方了。就酱，后面看一阵子go以后可以来写写golang的东西。&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 参考资料&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://www.seo-guwen.com/post-17.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx重定向规则详细介绍&lt;/a&gt;
&lt;a href=&quot;http://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自定义 Git - Git 钩子&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一个月没更新，期末复习的时候光鼓捣网站却懒得写东西，期末考完了，把这一个月鼓捣的东西记录一下，比如利用七牛进行静态文件托管。&lt;/p&gt;
    
    </summary>
    
      <category term="乱七八糟" scheme="//blog.stdioa.com/categories/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="nginx" scheme="//blog.stdioa.com/tags/nginx/"/>
    
      <category term="七牛" scheme="//blog.stdioa.com/tags/%E4%B8%83%E7%89%9B/"/>
    
      <category term="git" scheme="//blog.stdioa.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>博客迁移记（二）</title>
    <link href="//blog.stdioa.com/2015/12/blog-migration-ii/"/>
    <id>//blog.stdioa.com/2015/12/blog-migration-ii/</id>
    <published>2015-12-18T07:55:37.000Z</published>
    <updated>2016-01-06T07:15:24.817Z</updated>
    
    <content type="html">&lt;p&gt;域名依然在备案中，依然想将博客部署到新买的VPS的我和腾讯斗智斗勇（雾），为博客添加了HTTPS&amp;gt;_&amp;lt;
同时，把自己的密码学课设也转移到VPS上来了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1-nginxhost&quot;&gt;1. 使用Nginx针对多个host部署服务器&lt;/h1&gt;
&lt;h2 id=&quot;11&quot;&gt;1.1 概述&lt;/h2&gt;
&lt;p&gt;如果一个VPS只能搭一个网站，那未免太浪费了，所以我们可以通过配置Nginx的方式来将针对多个域名的访问请求分开，从而进行不同的处理。例如，我在DNS配置时将&lt;code&gt;blog.stdioa.com&lt;/code&gt;与&lt;code&gt;crypt.stdioa.com&lt;/code&gt;同时指向到我的腾讯云的IP地址，用户访问这两个域名时，都会向我的VPS发送请求，我要做的是将这两种针对不同域名的访问请求分开。而这两种请求的区别在HTTP请求头的Host字段，所以我只需要针对不同的Host使用不同的处理方式即可。&lt;/p&gt;
&lt;h2 id=&quot;12&quot;&gt;1.2 操作&lt;/h2&gt;
&lt;p&gt;我的VPS上撘有两个网站，其中&lt;code&gt;blog.stdioa.com&lt;/code&gt;域名指向的是我的博客——一个静态服务器，而&lt;code&gt;crypt&lt;/code&gt;域名指向的是一个使用flask搭建的网站，所以要在Nginx端进行反向代理，将请求转发到本地的5000端口。
具体配置文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;listen&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;server_name&lt;/span&gt;  stdioa.com blog.stdioa.com;       &lt;span class=&quot;comment&quot;&gt;# 通往博客的请求直接通过文件服务器返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;access_log&lt;/span&gt;  /var/log/nginx/access_blog.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;error_log&lt;/span&gt; /var/log/nginx/error_blog.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;root&lt;/span&gt;   /home/stdio/blog;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;index&lt;/span&gt;  index index.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt; / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt; ^~&lt;/span&gt; /.git &amp;#123;                            &lt;span class=&quot;comment&quot;&gt;# 禁止访问.git文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;deny&lt;/span&gt; all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;error_page&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;     /&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;server_name&lt;/span&gt; crypt.stdioa.com;                  &lt;span class=&quot;comment&quot;&gt;# host为crypt的请求转发本地端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;access_log&lt;/span&gt; /var/log/nginx/access_crypt.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;error_log&lt;/span&gt; /var/log/nginx/error_crypt.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt; / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;proxy_pass&lt;/span&gt; http://127.0.0.1:5000/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置完成后，重启Nginx, 可以看到访问不同域名时，请求会交给不同的程序处理。&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 屏蔽来自特定域名的请求&lt;/h1&gt;
&lt;h2 id=&quot;21&quot;&gt;2.1 背景&lt;/h2&gt;
&lt;p&gt;网站部署好后，又发现了一个来自奇怪域名的请求；更坑爹的是，这个域名指向自己的VPS；更更坑爹的是，来自这个域名的请求有好多，直接把我的日志刷爆了…所以我需要将来自这个域名的所有请求拒绝掉。&lt;/p&gt;
&lt;h2 id=&quot;22&quot;&gt;2.2 操作&lt;/h2&gt;
&lt;p&gt;新建一个Server就好啦。具体配置文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;server_name&lt;/span&gt; bailigo.com &lt;span class=&quot;regexp&quot;&gt;*.bailigo.com&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt; / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;410&lt;/span&gt;;         &lt;span class=&quot;comment&quot;&gt;# 410 Gone, 使用了这个状态码，不知道能不能不再让爬虫爬这个网页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置完成，重新载入配置文件，成功。
&lt;em&gt;本来想用418, 但是Nginx没有418的返回页面，想了想还是算了吧&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-https&quot;&gt;3. 为博客部署HTTPS服务器&lt;/h1&gt;
&lt;h2 id=&quot;31&quot;&gt;3.1 背景&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;blog.stdioa.com&lt;/code&gt;博客上午还可以访问，中午吃顿饭就发现访问被截断了，原因与以前一样——域名未完成备案。经查看，腾讯对访问博客的请求进行了301跳转，于是想了想，给博客配置了HTTPS, 让你们再阻断→_→（好吧再阻断的话我真的不知道该怎么弄了&lt;/p&gt;
&lt;h2 id=&quot;32-lets-encrypt&quot;&gt;3.2 使用Let’s Encrypt生成网站证书&lt;/h2&gt;
&lt;p&gt;之前就看中了&lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Let’s Encrypt&lt;/a&gt;，它提供主流浏览器认证的免费证书，只可惜当时没有域名无法体验。现在有了域名，加上腾讯对未备案的域名查的很紧，所有未备案域名下的网站搭起来半天就被封掉，想了想，还是生成一个证书，配个HTTPS撑一阵子吧╮(╯_╰)╭
按照官方的&lt;a href=&quot;https://community.letsencrypt.org/t/quick-start-guide/1631&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;指南&lt;/a&gt;以及&lt;a href=&quot;http://www.vpser.net/build/letsencrypt-free-ssl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此指南&lt;/a&gt;在将&lt;a href=&quot;https://github.com/letsencrypt/letsencrypt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Let’s Encrypt的Repo&lt;/a&gt; clone到本地之后，输入&lt;code&gt;./letsencrypt-auto certonly --email 邮箱 -d 域名 --agree-tos&lt;/code&gt;来生成证书。由于腾讯云到Let’s Encrypt的服务器的链接极其不稳定，通常需要重试很多次才能正常跟Let’s Encrypt的服务器通信。成功后会显示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IMPORTANT NOTES:
- Congratulations! Your certificate and chain have been saved at
/etc/letsencrypt/live/blog.stdioa.com/fullchain.pem. Your cert
will expire on 2016-03-17. To obtain a new version of the
certificate in the future, simply run Let’s Encrypt again.
- If you like Let’s Encrypt, please consider supporting our work by:&lt;/p&gt;
&lt;p&gt;Donating to ISRG / Let’s Encrypt:   &lt;a href=&quot;https://letsencrypt.org/donate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://letsencrypt.org/donate&lt;/a&gt;
Donating to EFF:                    &lt;a href=&quot;https://eff.org/donate-le&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://eff.org/donate-le&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证书已存储在上面信息指示的目录。&lt;/p&gt;
&lt;h2 id=&quot;33-nginx-https&quot;&gt;3.3 配置Nginx, 搭建HTTPS服务器&lt;/h2&gt;
&lt;p&gt;证书已生成，下面该配置Nginx了，添加下列配置：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;listen&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;443&lt;/span&gt; ssl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;server_name&lt;/span&gt;  blog.stdioa.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;ssl_certificate&lt;/span&gt; /etc/letsencrypt/live/blog.stdioa.com/fullchain.pem;        &lt;span class=&quot;comment&quot;&gt;# 添加证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;ssl_certificate_key&lt;/span&gt; /etc/letsencrypt/live/blog.stdioa.com/privkey.pem;      &lt;span class=&quot;comment&quot;&gt;# 添加密钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;ssl_ciphers&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;ssl_protocols&lt;/span&gt; TLSv1 TLSv1.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; TLSv1.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;ssl_session_cache&lt;/span&gt; shared:SSL:&lt;span class=&quot;number&quot;&gt;10m&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 后面和普通服务器一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;access_log&lt;/span&gt;  /var/log/nginx/access_blog.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;error_log&lt;/span&gt; /var/log/nginx/error_blog.log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;root&lt;/span&gt;   /home/stdio/blog;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;index&lt;/span&gt;  index index.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt; ^~&lt;/span&gt; /.git &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;deny&lt;/span&gt; all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;error_page&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt; /&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新加载配置，访问&lt;a href=&quot;https://blog.stdioa.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.stdioa.com&lt;/a&gt; , 成功~&lt;/p&gt;
&lt;p&gt;小插曲：
昨天晚上熄灯之前发现Ubuntu上使用&lt;code&gt;apt-get&lt;/code&gt;安装的Nginx版本太老了，于是在VPS上重新编译升级了Nginx，结果配置好HTTPS以后重启Nginx时发现启动失败，原因为缺少&lt;code&gt;ngx&lt;/code&gt;组件。经Google后发现没有编译该组件，所以重新编译安装Nginx, 在配置时加入&lt;code&gt;--with-http_ssl_module&lt;/code&gt;选项。&lt;/p&gt;
&lt;p&gt;小插曲2：
HTTPS配置好后访问博客，Chrome提示“存在不安全的内容”，选择加载后，地址栏左边的HTTPS会变成红色，极其不好看（雾），于是看了博客的模板，发现有两个js在加载时选择使用HTTP方式加载，于是将&lt;code&gt;http://.../*.js&lt;/code&gt;改为&lt;code&gt;//.../*.js&lt;/code&gt;, 使浏览器可以根据当前协议自动选择JS文件的加载协议。更新博客模板，重新访问，所有js均使用HTTPS方式加载，问题解决。附图:&lt;/p&gt;
&lt;center&gt;![哈哈哈HTTPS](/pics/hhh_HTTPS.jpg)&lt;/center&gt;
&lt;p&gt;小插曲3：
上面那张图片的链接之前来自七牛，采用HTTP协议而不是HTTPS加载。发布这篇博文后，我发现该文章页面中地址栏左侧的HTTPS标志变为了白色…还是不好看！打开Chrome的控制台，在控制台中看到，如果图片链接协议为HTTPS，则Chrome依然会提示“不安全”，但是个人感觉这只是一张图片而已啊，又不是JS_(:зゝ∠)_
解决方案：将图片链接改回本地，待域名备案后再想办法在七牛那边解决域名绑定及HTTPS的问题。&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 参考资料&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://www.vpser.net/build/letsencrypt-free-ssl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;免费SSL安全证书Let’s Encrypt安装使用教程(附Nginx/Apache配置)&lt;/a&gt;
&lt;a href=&quot;http://blog.csdn.net/donghustone/article/details/25797727&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/donghustone/article/details/25797727&lt;/a&gt;
&lt;a href=&quot;http://serverfault.com/questions/438889/nginx-ssl-error&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx SSL error - Server Fault&lt;/a&gt;
&lt;a href=&quot;http://www.zzidc.com/main/help/showHelpContent/id_473.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;网站存在不安全因素的解决办法&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 后记&lt;/h1&gt;
&lt;p&gt;快递已发出，相片已审核成功，腾讯收到资料之后会尽快报管局审理…希望2016年之前能够备案成功QvQ
嗯，Google真好用
&lt;strong&gt;说好的准备考试呢！&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Update @ 16:38&lt;/strong&gt;
上午才把资料用快递发走，下午腾讯云就说我的纸质资料已收到…打电话问了一下，客服说腾讯为了加快审核速度，帮我准备了一份材料上交管局，估计他们是用我的扫描件打印了一份交上去了吧，也是不错2333 最后希望通信交通管理局快一点_(:зゝ∠)_&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Update @ 19:59, Dec. 24th, 2015&lt;/strong&gt;
腾讯云访问Github的速度太慢了，于是将博客的Repo迁移到了Coding上。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建立私有项目&lt;/li&gt;
&lt;li&gt;设置部署公钥
因为是私有项目所以无法通过一个__不含用户名密码__的链接访问Repo来进行Pull，所以还是通过SSH访问比较舒服一些。&lt;/li&gt;
&lt;li&gt;改掉VPS上的origin链接，完成&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;曾经听到过一种说法：用HTTPS访问Git Repo要比SSH更好，然而一直不知道好在哪…记得用HTTPS访问Repo的时候账户的用户名和密码是要附在链接里面的，感觉好不安全
域名备案看来真的要奔着20天的样子去了…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update @ 11:07, Jan. 5th, 2015&lt;/strong&gt;
域名备案在2016年的第一个工作日通过啦！庆祝一下，期末之后开始准备制作个人网站~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;域名依然在备案中，依然想将博客部署到新买的VPS的我和腾讯斗智斗勇（雾），为博客添加了HTTPS&amp;gt;_&amp;lt;
同时，把自己的密码学课设也转移到VPS上来了。&lt;/p&gt;
    
    </summary>
    
      <category term="乱七八糟" scheme="//blog.stdioa.com/categories/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="nginx" scheme="//blog.stdioa.com/tags/nginx/"/>
    
      <category term="Github" scheme="//blog.stdioa.com/tags/Github/"/>
    
      <category term="Let's Encrypt" scheme="//blog.stdioa.com/tags/Let-s-Encrypt/"/>
    
  </entry>
  
  <entry>
    <title>博客迁移记（一）</title>
    <link href="//blog.stdioa.com/2015/12/blog-migration/"/>
    <id>//blog.stdioa.com/2015/12/blog-migration/</id>
    <published>2015-12-17T11:55:37.000Z</published>
    <updated>2015-12-18T05:53:29.525Z</updated>
    
    <content type="html">&lt;p&gt;昨天买了一个VPS、一个域名，决定把博客迁移到VPS上。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 背景介绍&lt;/h1&gt;
&lt;p&gt;首先打个广告：借助“腾讯云+校园”计划，我成功地用上了1元/月的服务器和11元/月的.com域名。
有了国内访问速度极快的VPS，有了域名，就想自己鼓捣鼓捣，把自己的博客和其他站点托管到VPS上。&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 博客托管&lt;/h1&gt;
&lt;h2 id=&quot;21&quot;&gt;2.1 搭建静态文件服务器&lt;/h2&gt;
&lt;p&gt;因为自己的博客是静态博客，之前托管在&lt;a href=&quot;https://github.com/StdioA/stdioa.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上，依靠Github Pages实现部署，所以我先将文件clone了下来，存放在&lt;code&gt;~/blog&lt;/code&gt;目录中。
下面要做的，是搭建一个静态服务器。&lt;/p&gt;
&lt;h3 id=&quot;211-pythonsimplehttpserver&quot;&gt;2.1.1 使用Python的SimpleHTTPServer&lt;/h3&gt;
&lt;p&gt;Python的SimpleHTTPServer是一个非常实用、方便的库，可以使用简单一条命令在当前目录创建一个HTTP文件服务器。所以输入&lt;code&gt;sudo python -m SimpleHTTPServer 80&lt;/code&gt;命令，即可搭建一个静态文件服务器，实现从外网对静态博客的直接访问。
然而搭建好后，我发现了一个问题：因为我的blog文件夹本身是一个Git Repo, 所以我可以直接从外网访问.git文件夹，虽然我的.git目录没有保存任何设置及账户等，但这样会带来一定的安全隐患，所以要想办法禁止外部用户对.git文件夹的访问。&lt;/p&gt;
&lt;h3 id=&quot;212-nginx&quot;&gt;2.1.2 使用Nginx托管文件服务器&lt;/h3&gt;
&lt;p&gt;关于Nginx的介绍，请自行访问&lt;a href=&quot;http://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;与&lt;a href=&quot;https://en.wikipedia.org/wiki/Nginx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科&lt;/a&gt;。
之前用过Apache, 但是在接触Nginx后，我认为我对Nginx更有好感，所以采用了Nginx做为文件托管服务器。
首先安装Nginx，删掉&lt;code&gt;/etc/nginx/sites-enabled&lt;/code&gt;目录（我的系统是Ubuntu Server 14.04 LTS），在&lt;code&gt;conf.d&lt;/code&gt;目录中设置配置文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen 80;                              # 监听端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server_name server;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /home/ubuntu/blog;                 # 托管目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    index index.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    access_log /var/log/nginx/access_blog.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error_log /var/log/nginx/error_blog.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 禁止对.git目录的访问&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location ^~ /.git &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deny all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置完成后，重启Nginx, 所有服务正常运行，访问.git目录时会返回403.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SimpleHTTPServer在建立服务器的时候只能监听&lt;code&gt;0.0.0.0&lt;/code&gt;而不能只监听&lt;code&gt;127.0.0.1&lt;/code&gt;, 之前搭建服务器的时候用的SimpleHTTPServer+Nginx反向代理，现在看起来感觉我就是个傻逼…&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;22-webhook&quot;&gt;2.2 借助Webhook实现博客的自动部署&lt;/h2&gt;
&lt;p&gt;因为之前静态博客托管在Github Pages上，所以向Github Repo上面进行push操作之后会动态更新页面。但是如果将静态博客托管在VPS上，则需要每次执行&lt;code&gt;git pull&lt;/code&gt;才能够将内容更新。所以我在VPS上写了一个脚本，能够在Push之后自动进行&lt;code&gt;git pull&lt;/code&gt;来更新内容。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在Github上的repo设置Webhook
在repo的设置页面可以设置Webhook, 可在该repo收到push之后，Github可以向一个特定的URL发送一个POST请求。所以我设置了一个Webhook, 在push之后可以向我的VPS的特定端口发送POST请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置服务器接收Webhook
在VPS中配置一个服务器，开放VPS的一个端口来接收来自Github的Webhook，这里使用bottle来搭建服务器框架。服务器代码:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding: utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bottle &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@route(&quot;/push&quot;, method=[&quot;POST&quot;])    # 监听Webhook&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pull&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&quot;./auto_pull.sh&quot;&lt;/span&gt;)     &lt;span class=&quot;comment&quot;&gt;# 执行git pull脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;OK&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;run(host=&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;, port=&lt;span class=&quot;number&quot;&gt;23333&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;编写自动pull脚本
编写自动pull脚本&lt;code&gt;auto_pull.sh&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ~/blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行服务器，则可监听23333端口的POST请求，然后自动执行&lt;code&gt;git pull&lt;/code&gt;更新博客内容。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 后记&lt;/h1&gt;
&lt;p&gt;至此，博客&lt;strong&gt;部分&lt;/strong&gt;成功迁移到VPS.
为什么要说“部分”？因为我的域名在做备案啊QvQ备案好麻烦还要打印材料还要跑到市中心去照相还要发快递到北京QvQ都做好还得等待管局审核QvQ
吐槽时间结束。后面等域名备案好以后可能会鼓捣一阵子Nginx，为服务器启用HTTPS等…
&lt;strong&gt;唉，还是先去复习吧_(:зゝ∠)_&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;_在写博文时，去编译升级了一下Nginx, 鼓捣配置文件又弄了半天_╮(╯_╰)╭&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨天买了一个VPS、一个域名，决定把博客迁移到VPS上。&lt;/p&gt;
    
    </summary>
    
      <category term="乱七八糟" scheme="//blog.stdioa.com/categories/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="nginx" scheme="//blog.stdioa.com/tags/nginx/"/>
    
      <category term="Github" scheme="//blog.stdioa.com/tags/Github/"/>
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>随手记 - 解决InsecurePlatformWarning</title>
    <link href="//blog.stdioa.com/2015/12/essay-solve-InsecurePlatformWarning/"/>
    <id>//blog.stdioa.com/2015/12/essay-solve-InsecurePlatformWarning/</id>
    <published>2015-12-07T15:01:00.000Z</published>
    <updated>2015-12-20T02:21:53.885Z</updated>
    
    <content type="html">&lt;p&gt;第三次在VPS上面解决使用requests报InsecurePlatformWarning警告的问题。之前每次都要查资料折腾好久，这次决定把它记下来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 干货&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Debian类系统&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install python-dev libssl-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pip install -U requests[security]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redhat类系统&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo yum install python-devel openssl-devel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo pip install -U requests[security]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 需求&lt;/h1&gt;
&lt;p&gt;自己的VPS系统有点老(Ubuntu 14.04 LTS), 所以python版本也比较落后(Python 2.7.3), 今天改代码需要用到requests新版本中提供的功能，但是requests升级后发送HTTPS请求时会报出InsecurePlatformWarning, 这是一个由openssl漏洞(Heartbleed)造成的警告，所以需要升级pyopenssl等模块。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 升级过程&lt;/h1&gt;
&lt;p&gt;pypi提供了一个升级包，叫做&lt;code&gt;requests[security]&lt;/code&gt;, 用pip进行升级即可。输入&lt;code&gt;sudo pip install requests[security]&lt;/code&gt;命令后，pip报错，才发现不能本地编译python包，遂安装&lt;code&gt;python-dev&lt;/code&gt;. 然后再次安装时发现缺少&lt;code&gt;openssl/aes.h&lt;/code&gt;头文件，又去安装openssl的开发包&lt;code&gt;libssl-dev&lt;/code&gt;, 再次安装，安装成功。&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 参考资料&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/blog/henulwj/48131393&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[原]pip安装模块警告InsecurePlatformWarning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/30539798/zsh-no-matches-found-requestssecurity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zsh - no matches found: requests[security]&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第三次在VPS上面解决使用requests报InsecurePlatformWarning警告的问题。之前每次都要查资料折腾好久，这次决定把它记下来。&lt;/p&gt;
    
    </summary>
    
      <category term="随手记" scheme="//blog.stdioa.com/categories/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="openssl" scheme="//blog.stdioa.com/tags/openssl/"/>
    
      <category term="requests" scheme="//blog.stdioa.com/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之unittest</title>
    <link href="//blog.stdioa.com/2015/11/learning-python-unittest/"/>
    <id>//blog.stdioa.com/2015/11/learning-python-unittest/</id>
    <published>2015-11-12T10:53:02.000Z</published>
    <updated>2016-04-06T08:24:45.487Z</updated>
    
    <content type="html">&lt;p&gt;单元测试，工程开发中重要的一环。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试工作。&lt;/p&gt;
&lt;h1 id=&quot;2-unittest&quot;&gt;2. 使用unittest进行测试&lt;/h1&gt;
&lt;p&gt;unittest是Python自带的单元测试模块，通过编写测试类，在测试类中编写测试函数的方式进行测试。
不知道该测试什么，就对python的list对象测试一下好了。&lt;/p&gt;
&lt;h2 id=&quot;21&quot;&gt;2.1 编写测试文件&lt;/h2&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding: utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unittest                                 &lt;span class=&quot;comment&quot;&gt;# 使用unittest模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestStringMethods&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(unittest.TestCase)&lt;/span&gt;:&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;# 测试类需继承自unittest.TestCase&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 在函数里进行测试之前需要进行的一些准备工作，setUp在每次测试之前都会运行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.d = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_empty&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Empty testcase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertEqual([], [])                &lt;span class=&quot;comment&quot;&gt;# 若a和b相等则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertNotEqual([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], [])            &lt;span class=&quot;comment&quot;&gt;# 若不相等则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_bool&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Bool transform testcase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertTrue([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])                    &lt;span class=&quot;comment&quot;&gt;# 若内部的表达式或对象为真则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertFalse([])                    &lt;span class=&quot;comment&quot;&gt;# 为假则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertTrue(bool([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertFalse(bool([]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_append&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Append testcase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_ = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_.append(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertEqual(list_, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertNotEqual(list_, [])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_.append(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertIn(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, list_)                 &lt;span class=&quot;comment&quot;&gt;# 若a in b则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertNotIn(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, list_)              &lt;span class=&quot;comment&quot;&gt;# 若a not in b则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertTrue(list_[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertEqual(list_[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_instance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_ = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertIsInstance(list_, list)      &lt;span class=&quot;comment&quot;&gt;# 若isinstance(a, b)为真则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertNotIsInstance(list_, str)    &lt;span class=&quot;comment&quot;&gt;# 若isinstance(a, b)为假则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_index&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Index testcase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_ = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; self.assertRaises(IndexError):     &lt;span class=&quot;comment&quot;&gt;# 检测是否有异常抛出，有指定异常抛出则通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            a = list_[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_ = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertEqual(list_[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertEqual(list_[&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; self.assertRaises(IndexError):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            a = list_[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 在测试之后需要进行的一些处理事项，tearDown在每次测试之后都会运行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; self.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __import__(&lt;span class=&quot;string&quot;&gt;&quot;sys&quot;&lt;/span&gt;).argv.append(&lt;span class=&quot;string&quot;&gt;&quot;-v&quot;&lt;/span&gt;)         &lt;span class=&quot;comment&quot;&gt;# 采用verbose方式，输出测试信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unittest.main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;22&quot;&gt;2.2 运行测试&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;直接运行测试程序，输出:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_append (__main__.TestStringMethods)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Append testcase ... ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_bool (__main__.TestStringMethods)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bool transform testcase ... ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_empty (__main__.TestStringMethods)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Empty testcase ... ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_index (__main__.TestStringMethods)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Index testcase ... ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_instance (__main__.TestStringMethods) ... ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ran 5 tests &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 0.001s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;运行&lt;code&gt;python -m unittest test.py&lt;/code&gt;也可以进行测试；&lt;/li&gt;
&lt;li&gt;运行&lt;code&gt;python -m unittest&lt;/code&gt;, unittest会在当前文件夹中寻找测试类进行测试（真智能）；&lt;/li&gt;
&lt;li&gt;若有测试未通过，unittest会在测试时报告FAIL, 并在测试结束后将所有未通过测试的项目列出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;3-nose&quot;&gt;3. 使用Nose进行单元测试&lt;/h1&gt;
&lt;p&gt;Nose是一个对unittest的扩展测试框架，能自动发现并运行测试。使用Nose，可以将单元测试代码的编写变得更简单，不用再构造测试类，只需要在以&lt;code&gt;test&lt;/code&gt;开头的文件中建立以&lt;code&gt;test&lt;/code&gt;开头的函数即可。&lt;/p&gt;
&lt;h2 id=&quot;31&quot;&gt;3.1 编写测试文件&lt;/h2&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding: utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; nose&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_nose_installed_successfully&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; nose                         &lt;span class=&quot;comment&quot;&gt;# 运行测试代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;                         &lt;span class=&quot;comment&quot;&gt;# assert True表示测试成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_obviously_failed&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;                        &lt;span class=&quot;comment&quot;&gt;# assert False表示测试失败，测试时会报&quot;FAIL&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_returns_an_exception&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; ValueError                    &lt;span class=&quot;comment&quot;&gt;# 若抛出除AssertionError的异常，测试时会报&quot;ERROR&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nose.main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;32&quot;&gt;3.2 运行测试文件&lt;/h2&gt;
&lt;p&gt;nose自带可执行文件，所以只需要输入&lt;code&gt;nosetests [测试文件名]&lt;/code&gt;即可，若测试文件名为空，则nosetest会在当前文件夹寻找所有测试。以下命令格式均可接受：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nosetests test.module&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nosetests another.test:TestCase.test_method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nosetests a.test:TestCase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nosetests /path/to/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/file.py:&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行&lt;code&gt;nosetests test_with_nose -v&lt;/code&gt;，输出：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ nosetests &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_with_nose -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_with_nose.test_nose_installed_successfully ... ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_with_nose.test_obviously_failed ... FAIL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_with_nose.test_returns_an_exception ... ERROR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR: &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_with_nose.test_returns_an_exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;c:\python35\lib\site-packages\nose\case.py&quot;&lt;/span&gt;, line 198, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; runTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.test(*self.arg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;C:\Users\Stdio\Desktop\temp\utest\test_with_nose.py&quot;&lt;/span&gt;, line 13, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_returns_an_exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    raise ValueError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ValueError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAIL: &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_with_nose.test_obviously_failed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; File &lt;span class=&quot;string&quot;&gt;&quot;c:\python35\lib\site-packages\nose\case.py&quot;&lt;/span&gt;, line 198, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; runTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   self.test(*self.arg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;C:\Users\Stdio\Desktop\temp\utest\test_with_nose.py&quot;&lt;/span&gt;, line 10, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_obviously_failed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   assert False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AssertionError&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ran 3 tests &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 0.003s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAILED (errors=1, failures=1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/unittest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;unitest - Python Doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143191629979802b566644aa84656b50cd484ec4a7838000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;单元测试 - 廖雪峰的python教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nose.readthedocs.org/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nose documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/linda1000/article/details/8533349&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python的学习（十八）---- 单元测试工具nose&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 后记&lt;/h1&gt;
&lt;p&gt;拖了一个月，这个坑再不填日子没法过了(╯‵□′)╯︵┻━┻
到现在没给自己的代码写过测试，也是醉…
一直想转Py3一直没转，昨天改了环境变量，强迫自己用一阵子，多去看看Py3的特性，有时间整理一下。
Git的坑还没填完不过自己的Pro Git看的差不多了，貌似也满足自己的需求了，准备弃坑。
下一篇有可能是SQLAlchemy, MongoDB, Flask…哎，随它去吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;单元测试，工程开发中重要的一环。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="//blog.stdioa.com/categories/Python/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="unittest" scheme="//blog.stdioa.com/tags/unittest/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之collections</title>
    <link href="//blog.stdioa.com/2015/10/learning-python-collections/"/>
    <id>//blog.stdioa.com/2015/10/learning-python-collections/</id>
    <published>2015-10-29T12:55:00.000Z</published>
    <updated>2015-12-20T02:22:17.054Z</updated>
    
    <content type="html">&lt;p&gt;collection是Python内建的一个实用工具包，提供一些使用的容器，用于对传统容器类型进行功能提升。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;上面就是简介，不会扯了，贴两个链接好了。
&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001411031239400f7181f65f33a4623bc42276a605debf6000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Collections - 廖雪峰的Python教程&lt;/a&gt;
&lt;a href=&quot;https://docs.python.org/2.7/library/collections.html#module-collections&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Collections - High-performance container datatypes - Python Doc&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-namedtuple&quot;&gt;2. namedtuple&lt;/h1&gt;
&lt;h2 id=&quot;21&quot;&gt;2.1 功能简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;namedtuple&lt;/code&gt;为一个函数，用于产生一个tuple类的子类。由该类实例化后的对象可以像tuple一样pack/unpack，也可以通过预先定义好的成员名称访问对象内部的数据。例：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from collections import namedtuple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Point = namedtuple(&lt;span class=&quot;string&quot;&gt;&quot;Point&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Point                                           &lt;span class=&quot;comment&quot;&gt;# namedtuple函数返回一个类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;class &lt;span class=&quot;string&quot;&gt;&#39;__main__.Point&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Point.__base__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;tuple&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Point(x=1, y=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point(x=1, y=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Point(1,2)                                      &lt;span class=&quot;comment&quot;&gt;# 两种定义方式均可，但是要注意的是，Point的参数长度是不可变的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point(x=1, y=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; p = Point(1, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; p.x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; x, y = p                                        &lt;span class=&quot;comment&quot;&gt;# 可以像tuple一样进行unpack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Point._make((1,2))                              &lt;span class=&quot;comment&quot;&gt;# pack的方式和tuple不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point(x=1, y=2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;22&quot;&gt;2.2 成员函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;somenamedtuple._make(iterable)&lt;/code&gt;, 将一个可迭代对象（list, tuple等）转化为一个namedtuple对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;t = [&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Point._make(t)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point(x=&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;somenamedtuple._asdict()&lt;/code&gt;, 将对象转化一个为键值和数据对应的OrderedDict.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;p._asdict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OrderedDict([(&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;)])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;somenamedtuple._replace(kwargs)&lt;/code&gt;, 返回一个新对象，该对象中的值按照_replace函数中的参数所改变。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;p = Point(x=&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;p._replace(x=&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point(x=&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;somenamedtuple._fields&lt;/code&gt;, 返回一个所有键值构成的dict.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;p._fields                                                       &lt;span class=&quot;comment&quot;&gt;# 查看键值名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Color = namedtuple(&lt;span class=&quot;string&quot;&gt;&#39;Color&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;red green blue&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Pixel = namedtuple(&lt;span class=&quot;string&quot;&gt;&#39;Pixel&#39;&lt;/span&gt;, Point._fields + Color._fields)      &lt;span class=&quot;comment&quot;&gt;# 将Color和Point“合并”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Pixel(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Pixel(x=&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, red=&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, green=&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, blue=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;23&quot;&gt;2.3 应用场景&lt;/h2&gt;
&lt;p&gt;列举一个应用场景：在进行sql查询时，&lt;code&gt;cur.fetchone()&lt;/code&gt;会返回一个tuple而不是dict，我们可以定义一个namedtuple, 然后将sql的查询数据转为namedtuple类，然后通过成员函数访问。举个栗子（私货）：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Account = namedtuple(&lt;span class=&quot;string&quot;&gt;&quot;Account&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;])   &lt;span class=&quot;comment&quot;&gt;# 定义Account类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur = self.db.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur.execute(&lt;span class=&quot;string&quot;&gt;&quot;SELECT username, password FROM account\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                WHERE valid=1\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ORDER BY RANDOM()\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                LIMIT 1&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;account= Account._make(cur.fetchone())                      &lt;span class=&quot;comment&quot;&gt;# 将数据tuple转为Account对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.postdata[&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;] = account.username                &lt;span class=&quot;comment&quot;&gt;# 直接访问成员数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.postdata[&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;] = account.password&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# self.login(username, password)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.login(account)                                         &lt;span class=&quot;comment&quot;&gt;# 可以将account整体作为参数，使程序看起来更简洁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;3-deque-&quot;&gt;3. deque - 双端队列&lt;/h1&gt;
&lt;h2 id=&quot;31&quot;&gt;3.1 介绍&lt;/h2&gt;
&lt;p&gt;deque为Double-Ended Queue的简写，用于提供一个可以快速进行两端的插入或删除操作的队列，同时可以像list一样通过下标访问数据。由于list是储存在线性空间的，其插入/删除数据的时间复杂度为O(n)，所以当list比较长的时候，在其头部插入/删除数据的操作需要耗费大量时间。所以如果需要对list对象进行大量头和尾的插入删除操作时，使用deque会使程序的运行效率更高（当然，使用Queue模块的Queue和LifoQueue也是不错的选择）。需要注意的是，deque对象不支持在中间位置的插入操作。
deque对象也被包含在Queue模块中。&lt;/p&gt;
&lt;h2 id=&quot;32&quot;&gt;3.2 成员函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;append(x)&lt;/code&gt;, &lt;code&gt;appendleft(x)&lt;/code&gt;, 在deque的尾/头插入对象x, 与list类似；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extend(iterable)&lt;/code&gt;, &lt;code&gt;extendleft(iterable)&lt;/code&gt;, 与list的extend类似；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop(x)&lt;/code&gt;, &lt;code&gt;popleft(x)&lt;/code&gt;, 与list的pop类似；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear()&lt;/code&gt;, 清空deque的所有元素；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count(x)&lt;/code&gt;, 统计deque中x元素的个数；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remove(x)&lt;/code&gt;, 删除deque中的x元素，若x元素不存在，则触发ValueError;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reverse()&lt;/code&gt;, 将deque反转，返回None, 与list的reverse类似;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rotate(i)&lt;/code&gt;, 将deque最末尾i个元素取出并插入头部，若i&amp;lt;0, 则将头部|i|个元素取出添加到尾部。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;4-counter-&quot;&gt;4. Counter - 计数器&lt;/h1&gt;
&lt;h2 id=&quot;41&quot;&gt;4.1 介绍&lt;/h2&gt;
&lt;p&gt;Counter类是dict的子类，提供一个计数器，可对hashable的对象进行计数。需要注意的是，对象的计数可以小于0.&lt;/p&gt;
&lt;h2 id=&quot;42&quot;&gt;4.2 基本操作&lt;/h2&gt;
&lt;p&gt;直接上例子：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = Counter()                           &lt;span class=&quot;comment&quot;&gt;# 空计数器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = Counter(&lt;span class=&quot;string&quot;&gt;&#39;gallahad&#39;&lt;/span&gt;)                 &lt;span class=&quot;comment&quot;&gt;# 对iterable对象中的元素进行计数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;)      &lt;span class=&quot;comment&quot;&gt;# 从map中读取元素和对应计数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = Counter(cats=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, dogs=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)             &lt;span class=&quot;comment&quot;&gt;# 从关键字参数中获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;dogs&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;cats&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c[&lt;span class=&quot;string&quot;&gt;&quot;dogs&quot;&lt;/span&gt;]                               &lt;span class=&quot;comment&quot;&gt;# 获取计数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c[&lt;span class=&quot;string&quot;&gt;&quot;elephants&quot;&lt;/span&gt;]                          &lt;span class=&quot;comment&quot;&gt;# 对于不存在的元素，会返回0 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;43&quot;&gt;4.3 成员函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;elements()&lt;/code&gt;, 返回一个迭代器，包含Counter中的所有元素，若元素x的计数为n，则x在迭代器中会出现n次。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c = Counter(a=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, b=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, c=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, d=&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;list(c.elements())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;most_common([n])&lt;/code&gt;, 返回计数最多的n个元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Counter(&lt;span class=&quot;string&quot;&gt;&#39;abracadabra&#39;&lt;/span&gt;).most_common(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;update([iterable-or-mapping])&lt;/code&gt;, 在现有计数上添加参数所对应的计数。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = Counter(&lt;span class=&quot;string&quot;&gt;&quot;1233&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c.update(&lt;span class=&quot;string&quot;&gt;&quot;2345&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;substact([iterable-or-mapping])&lt;/code&gt;, 在现有计数上减去参数所对应的计数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以用在Counter对象上的通用函数和常见用法有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sum(c.values())&lt;/code&gt;, 所有计数之和&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c.clear()&lt;/code&gt;, 将计数重置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list(c)&lt;/code&gt;, 返回所有元素构成的列表, 其中元素不会重复&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set(c)&lt;/code&gt;, 转化为set&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dict(c)&lt;/code&gt;, 转化为dict&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c.items()&lt;/code&gt;, 转化为由(元素, 计数)构成的列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Counter(dict(list_of_pairs))&lt;/code&gt;, 从上述列表转化为Counter对象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c.most_common()[:-n-1:-1]&lt;/code&gt;, 出现最少的n个元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c += Counter()&lt;/code&gt;, 移除所有元素计数为0的元素
注意: 将某元素的计数赋值为0, 并不能在计数器的元素列表中删除该元素。若要删除该元素，需要用&lt;code&gt;del&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = Counter(&lt;span class=&quot;string&quot;&gt;&quot;12&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c[&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c[&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; c[&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Counter(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;5-defaultdict&quot;&gt;5. defaultdict&lt;/h1&gt;
&lt;h2 id=&quot;51&quot;&gt;5.1 介绍&lt;/h2&gt;
&lt;p&gt;defaultdict类是dict类的子类，包含dict类的所有功能。与dict不同的是，在调用不存在的键值时，dict会抛出&lt;code&gt;KeyError&lt;/code&gt;异常，而defaultdict会执行&lt;code&gt;__missing__&lt;/code&gt;函数, 通过调用该函数来进行操作或返回值。
定义方式如下:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;d = defaultdict()                                   &lt;span class=&quot;comment&quot;&gt;# 这种定义方式返回的对象跟普通dict无异&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = defaultdict(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;N/A&quot;&lt;/span&gt;)                      &lt;span class=&quot;comment&quot;&gt;# 定义__missing__函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a[&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;]                                        &lt;span class=&quot;comment&quot;&gt;# 返回&quot;N/A&quot;, 同时a[&quot;0&quot;]被赋值为&quot;N/A&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;52&quot;&gt;5.2 应用场景&lt;/h2&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;s = [(&lt;span class=&quot;string&quot;&gt;&#39;yellow&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;yellow&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;d = defaultdict(list)                                           &lt;span class=&quot;comment&quot;&gt;# 若键值不存在，则赋值为[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k, v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; s:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;... &lt;/span&gt;    d[k].append(v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;d.items()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[(&lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]), (&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]), (&lt;span class=&quot;string&quot;&gt;&#39;yellow&#39;&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;6-orderddict&quot;&gt;6. OrderdDict&lt;/h1&gt;
&lt;h2 id=&quot;61&quot;&gt;6.1 简介&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;dict&lt;/code&gt;时，Key是无序的。在对&lt;code&gt;dict&lt;/code&gt;做迭代时，我们无法确定Key的顺序。如果要保持Key的顺序，可以用&lt;code&gt;OrderedDict&lt;/code&gt;.
&lt;code&gt;OrderedDict&lt;/code&gt;的键值顺序按照键值被插入的顺序排列，而不是Key本身的顺序。
&lt;code&gt;OrderdDict&lt;/code&gt;的键值可以通过调用&lt;code&gt;popitem&lt;/code&gt;函数被弹出，弹出时弹出(key, item)的键值对。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = OrderedDict(&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;one&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)                     &lt;span class=&quot;comment&quot;&gt;# 可通过dict定义，也可传入可迭代对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a[&lt;span class=&quot;string&quot;&gt;&quot;zero&quot;&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a[&lt;span class=&quot;string&quot;&gt;&quot;two&quot;&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OrderedDict([(&lt;span class=&quot;string&quot;&gt;&#39;one&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;zero&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;two&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.popitem()                                     &lt;span class=&quot;comment&quot;&gt;# 弹出最后一个键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&#39;two&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.popitem(last=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)                           &lt;span class=&quot;comment&quot;&gt;# 弹出第一个键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&#39;one&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OrderedDict([(&lt;span class=&quot;string&quot;&gt;&#39;zero&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;7&quot;&gt;7. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2.7/library/collections.html#collections.OrderedDict&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;8.3 collections — High-performance container datatypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001411031239400f7181f65f33a4623bc42276a605debf6000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;collections - 廖雪峰的官方教程&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;8&quot;&gt;8. 后记&lt;/h1&gt;
&lt;p&gt;这篇博文写了两天，感觉在翻译文档，有点枯燥。一直觉得应该多去了解Python的内置常用模块，不要求完全熟练，至少要有个印象，这样在开发中需要使用这些模块的时候，才能够想起来用它。
所以，又填完一个坑。下一个应该是unittest吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;collection是Python内建的一个实用工具包，提供一些使用的容器，用于对传统容器类型进行功能提升。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="//blog.stdioa.com/categories/Python/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="collections" scheme="//blog.stdioa.com/tags/collections/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之迭代器</title>
    <link href="//blog.stdioa.com/2015/10/learning-python-iterator/"/>
    <id>//blog.stdioa.com/2015/10/learning-python-iterator/</id>
    <published>2015-10-26T07:43:00.000Z</published>
    <updated>2015-12-20T02:22:13.570Z</updated>
    
    <content type="html">&lt;p&gt;昨晚用python写了个简单的链表，突然想起了迭代器，就随手整理一下，顺便过一下itertools模块。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;迭代器(iterator)是Python中一种用来进行惰性迭代的数据类型，迭代器可以惰性地在需要时生成数据并返回已进行迭代，而不需要在开始进行时生成所有数据（有的时候也不可能生成所有数据，比如斐波那契数列的无穷迭代等）然后一个一个返回。&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 用法&lt;/h1&gt;
&lt;h2 id=&quot;21-iter&quot;&gt;2.1 最基础的例子: iter()函数生成迭代器&lt;/h2&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;list_ = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;it = iter(list_)                        &lt;span class=&quot;comment&quot;&gt;# 返回一个迭代器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;it.next()                               &lt;span class=&quot;comment&quot;&gt;# 获取一个迭代器元素，返回1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;next(it)                                &lt;span class=&quot;comment&quot;&gt;# 使用next内建函数，等同于it.next(), 返回2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;it.next()                               &lt;span class=&quot;comment&quot;&gt;# 迭代结束，触发StopIteration异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list_ = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;it = iter(list_)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it:                            &lt;span class=&quot;comment&quot;&gt;# 用for循环对迭代器进行循环迭代&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x                             &lt;span class=&quot;comment&quot;&gt;# 迭代结束时，StopIteration不会被触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;值得注意的是，迭代器只可向前迭代，不能向后迭代，获取之前已返回过的值（当然绝大多数的时候也没必要向后迭代）。&lt;/p&gt;
&lt;h2 id=&quot;22&quot;&gt;2.2 生成器&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;[x*2 for x in range(10) if x%2==0]&lt;/code&gt;, 这段代码为列表生成式（也称作列表解析），可以将一个列表进行转化；将方括号变为圆括号，&lt;code&gt;(x*2 for x in range(10) if x%2==0)&lt;/code&gt;, 则该代码变为一个生成器(generator)。
生成器可以像迭代器一样进行迭代，还可以通过生成器的成员函数和生成器内部的代码进行数据交换。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 自定义迭代器及生成器&lt;/h1&gt;
&lt;h2 id=&quot;31&quot;&gt;3.1 自定义迭代器&lt;/h2&gt;
&lt;p&gt;在编写类的时候，可以通过定义类的&lt;code&gt;__iter__&lt;/code&gt;函数来使类可以转化为迭代器。在&lt;code&gt;__iter__&lt;/code&gt;函数结束时，会自动引发&lt;code&gt;StopIteration&lt;/code&gt;异常。例:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.number = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__iter__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; self.number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.number += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = Counter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;it = iter(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; it.next()                 &lt;span class=&quot;comment&quot;&gt;# 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; it.next()                 &lt;span class=&quot;comment&quot;&gt;# 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; num &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; num                   &lt;span class=&quot;comment&quot;&gt;# 因为该迭代器为无穷迭代，所以会导致死循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;32&quot;&gt;3.2 自定义生成器&lt;/h2&gt;
&lt;p&gt;可以用函数自定义生成器。例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a, b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; a                 &lt;span class=&quot;comment&quot;&gt;# 用yield函数来在迭代时返回值，在下次迭代时，自动从yield语句的下一条语句开始执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a, b = b, a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k = fib()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; next(k)               &lt;span class=&quot;comment&quot;&gt;# 1 1 2 3 5 8 13 21 34 55&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; type(k)                   &lt;span class=&quot;comment&quot;&gt;# &amp;lt;generator object fib at 0x0268BDF0&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;33&quot;&gt;3.3 生成器的进阶用法&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;generator.next()&lt;/code&gt;用来进行迭代并获取返回值；&lt;code&gt;generator.close()&lt;/code&gt;用来关闭生成器，并在下次迭代时出发StopIteration异常。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = fib()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; next(a)                   &lt;span class=&quot;comment&quot;&gt;# 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.close()                       &lt;span class=&quot;comment&quot;&gt;# 关闭迭代器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; next(a)                   &lt;span class=&quot;comment&quot;&gt;# StopIteration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;generator.send(arg)&lt;/code&gt;可以向生成器内部传递对象，&lt;code&gt;generator.throw(typ[,val[,tb]])&lt;/code&gt;可以向生成器内部传递异常（包括类型，具体异常对象和Traceback）；在调用这两个函数后，生成器立刻进行迭代并返回值（或触发StopIteration）。具体操作：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret = &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; ValueError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;ValueError caught&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ret &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num = ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = counter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; c.next()                          &lt;span class=&quot;comment&quot;&gt;# 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; c.send(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)                         &lt;span class=&quot;comment&quot;&gt;# 传输3，内部yield语句返回3，然后进行下次迭代，生成4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; c.next()                          &lt;span class=&quot;comment&quot;&gt;# 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.throw(ValueError)                     &lt;span class=&quot;comment&quot;&gt;# 传递异常，内部yield函数触发异常，然后进行异常处理，输出&quot;ValueError caught&quot;，若未处理，则异常会向上层抛出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; c.next()                          &lt;span class=&quot;comment&quot;&gt;# 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4-itertools&quot;&gt;4. itertools模块&lt;/h1&gt;
&lt;p&gt;itertools是Python自带的一个模块，包含很多使用函数，用来对一个或多个可迭代对象进行操作后返回一个迭代器。具体函数列表：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;无限迭代器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;count(start, [step])&lt;/code&gt;
从start开始，以后每个元素都加上step。step默认值为1。
&lt;code&gt;count(5)&lt;/code&gt; -&amp;gt; 5 6 7 …&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cycle(p)&lt;/code&gt;
迭代至p的最后一个元素之后，从p的第一个元素重新迭代。
&lt;code&gt;cycle(&#39;abc&#39;)&lt;/code&gt; -&amp;gt; a b c a b c …&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repeat(elem [,n])&lt;/code&gt;
无限重复或重复n次返回elem。
&lt;code&gt;repeat(&amp;quot;Ah&amp;quot;, 3)&lt;/code&gt; -&amp;gt; “Ah” “Ah” “Ah”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在最短的序列结束迭代时停止迭代&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chain(p, q, …)
迭代至序列p的最后一个元素后，从q的第一个元素开始，直到所有序列终止。
&lt;code&gt;chain(&amp;quot;ABC&amp;quot;, &amp;quot;DEF&amp;quot;)&lt;/code&gt; -&amp;gt; A B C D E F&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compress(data, selectors)&lt;/code&gt;
如果bool(selectors[n])为True，则next()返回data[n]，否则跳过data[n]。
&lt;code&gt;compress(&#39;ABCDEF&#39;, [1,0,1,0,1,1])&lt;/code&gt; -&amp;gt; A C E F&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dropwhile(pred, seq)&lt;/code&gt;
当pred对seq[n]的调用返回False时才开始迭代。
&lt;code&gt;dropwhile(lambda x: x&amp;lt;5, [1,4,6,4,1])&lt;/code&gt; -&amp;gt; 6 4 1&lt;/li&gt;
&lt;li&gt;&lt;code&gt;takewhile(pred, seq)&lt;/code&gt;
dropwhile的相反版本。
&lt;code&gt;takewhile(lambda x: x&amp;lt;5, [1,4,6,4,1])&lt;/code&gt; -&amp;gt; 1 4&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifilter(pred, seq)&lt;/code&gt;
内建函数filter的迭代器版本。
&lt;code&gt;ifilter(lambda x: x%2, range(10))&lt;/code&gt; -&amp;gt; 1 3 5 7 9&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifilterfalse(pred, seq)&lt;/code&gt;
ifilter的相反版本。
&lt;code&gt;ifilterfalse(lambda x: x%2, range(10))&lt;/code&gt; -&amp;gt; 0 2 4 6 8&lt;/li&gt;
&lt;li&gt;&lt;code&gt;imap(func, p, q, ...)&lt;/code&gt;
内建函数map的迭代器版本。
&lt;code&gt;imap(pow, (2,3,10), (5,2,3))&lt;/code&gt; -&amp;gt; 32 9 1000&lt;/li&gt;
&lt;li&gt;&lt;code&gt;starmap(func, seq)&lt;/code&gt;
将seq的每个元素以变长参数(*args)的形式调用func。
&lt;code&gt;starmap(pow, [(2,5), (3,2), (10,3)])&lt;/code&gt; -&amp;gt; 32 9 1000&lt;/li&gt;
&lt;li&gt;&lt;code&gt;izip(p, q, ...)&lt;/code&gt;
内建函数zip的迭代器版本。
&lt;code&gt;izip(&#39;ABCD&#39;, &#39;xy&#39;)&lt;/code&gt; -&amp;gt; Ax By&lt;/li&gt;
&lt;li&gt;&lt;code&gt;izip_longest(p, q, ..., fillvalue=None)&lt;/code&gt;
izip的取最长序列的版本，短序列将填入fillvalue。
&lt;code&gt;izip_longest(&#39;ABCD&#39;, &#39;xy&#39;, fillvalue=&#39;-&#39;)&lt;/code&gt; -&amp;gt; Ax By C- D-&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tee(it, n)&lt;/code&gt;
返回n个迭代器it的复制迭代器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;groupby(iterable[, keyfunc])&lt;/code&gt;
这个函数功能类似于SQL的分组。使用groupby前，首先需要使用相同的keyfunc对iterable进行排序，比如调用内建的sorted函数。然后，groupby返回迭代器，每次迭代的元素是元组(key值, iterable中具有相同key值的元素的集合的子迭代器)。或许看看Python的排序指南对理解这个函数有帮助。
&lt;code&gt;groupby([0, 0, 0, 1, 1, 1, 2, 2, 2])&lt;/code&gt; -&amp;gt; (0, (0 0 0)) (1, (1 1 1)) (2, (2 2 2))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组合迭代器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;product(p, q, ... [repeat=1])&lt;/code&gt;
生成笛卡尔积。
&lt;code&gt;product(&#39;ABCD&#39;, repeat=2)&lt;/code&gt; --&amp;gt; AA AB AC AD BA BB BC BD CA CB CC CD DA DB DC DD&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permutations(p[, r])&lt;/code&gt;
生成全排列。
&lt;code&gt;permutations(&#39;ABCD&#39;, 2)&lt;/code&gt; --&amp;gt; AB AC AD BA BC BD CA CB CD DA DB DC&lt;/li&gt;
&lt;li&gt;&lt;code&gt;combinations(p, r)&lt;/code&gt;
生成组合。
&lt;code&gt;combinations(&#39;ABCD&#39;, 2)&lt;/code&gt; --&amp;gt; AB AC AD BC BD CD&lt;/li&gt;
&lt;li&gt;&lt;code&gt;combinations_with_replacement()&lt;/code&gt;
生成排列元素(p, q), 且p&amp;lt;q.
&lt;code&gt;combinations_with_replacement(&#39;ABCD&#39;, 2)&lt;/code&gt; --&amp;gt; AA AB AC AD BB BC BD CC CD DD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;部分文字来源：&lt;a href=&quot;http://www.cnblogs.com/huxi/archive/2011/07/01/2095931.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/huxi/archive/2011/07/01/2095931.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2.7/library/itertools.html#module-itertools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itertools - Python Doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00138681965108490cb4c13182e472f8d87830f13be6e88000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;生成器 - 廖雪峰的Python教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/bluebird_237/article/details/38894617&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 迭代器 &amp;amp; __iter__方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/huxi/archive/2011/07/01/2095931.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python函数式编程指南（三）：迭代器&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨晚用python写了个简单的链表，突然想起了迭代器，就随手整理一下，顺便过一下itertools模块。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="//blog.stdioa.com/categories/Python/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="迭代器" scheme="//blog.stdioa.com/tags/%E8%BF%AD%E4%BB%A3%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之上下文管理</title>
    <link href="//blog.stdioa.com/2015/10/learning-python-context-management/"/>
    <id>//blog.stdioa.com/2015/10/learning-python-context-management/</id>
    <published>2015-10-22T12:00:00.000Z</published>
    <updated>2015-12-20T02:22:08.283Z</updated>
    
    <content type="html">&lt;p&gt;最近突发奇想，想写一个能改变当前输出环境，输出彩色文字的上下文管理器，于是学习了一下上下文管理。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;上下文管理器(context manager)是Python2.5开始支持的一种语法，用于规定某个对象的使用范围。一旦进入或者离开该使用范围，会有特殊操作被调用 (比如为对象分配或者释放内存)。一个最简单的例子:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; file(&lt;span class=&quot;string&quot;&gt;&quot;a.txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; f.closed                  &lt;span class=&quot;comment&quot;&gt;# 此时文件是打开的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; f.closed                      &lt;span class=&quot;comment&quot;&gt;# 变量s和f依然存在，但此时f已关闭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 编写上下文管理器&lt;/h1&gt;
&lt;p&gt;为一个类编写上下文管理器时，需要定义类的&lt;code&gt;__enter__&lt;/code&gt;和&lt;code&gt;__exit__&lt;/code&gt;函数。&lt;/p&gt;
&lt;h2 id=&quot;21-enter-&quot;&gt;2.1 __enter__函数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;__enter__&lt;/code&gt;函数规定如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;contextmanager.__enter__()
Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the as clause of with statements using this context manager.
进入当前上下文，并返回当前对象或另一个与当前上下文相关的对象。被该函数返回的变量会通过该上下文管理器与with文法中as后的声明所绑定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BracketAdder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__enter__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# do something with self and runtime context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sys.stdout.write(&lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt;)           &lt;span class=&quot;comment&quot;&gt;# 输出左括号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# __exit__函数略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; BracketAdder() &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ba:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# do_something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;22-exit-&quot;&gt;2.2 __exit__函数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;__exit__&lt;/code&gt;函数格式如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;contexmanager.__exit__(exc_type, exc_val, exc_tb)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;文档太长懒得翻译了&lt;/em&gt;_(:зゝ∠)_&lt;/p&gt;
&lt;p&gt;如果代码块中出现异常，&lt;code&gt;exc_type&lt;/code&gt;为异常类型，&lt;code&gt;exc_val&lt;/code&gt;为该异常，&lt;code&gt;exc_tb&lt;/code&gt;为traceback.&lt;code&gt;__exit__&lt;/code&gt;函数应返回一个bool类型，若返回值为&lt;code&gt;True&lt;/code&gt;, 则在代码块及&lt;code&gt;__exit__&lt;/code&gt;函数运行结束后不会抛出任何异常，然后立即执行后面的代码；若返回值为&lt;code&gt;False&lt;/code&gt;，则在&lt;code&gt;__exit__&lt;/code&gt;函数运行结束后抛出异常。&lt;br&gt;
若代码块中未出现异常，则三个变量均为&lt;code&gt;None&lt;/code&gt;.
例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BracketAdder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# __enter__函数略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__exit__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, exc_type, exc_val, exc_tb)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# do something with self and runtime context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sys.stdout.write(&lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; exc_type == NameError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; BracketAdder():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a                    &lt;span class=&quot;comment&quot;&gt;# 若执行这一条引发NameError异常，则异常不会被抛出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;                    &lt;span class=&quot;comment&quot;&gt;# 若执行这一条引发ZeroDivisionError, 则异常会被抛出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 综合示例&lt;/h1&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding: utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CManager&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.in_context = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__enter__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.in_context = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I&#39;m entering the context&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__exit__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, exc_type, exc_val, exc_tb)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.in_context = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I&#39;m leaving the context&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; exc_type == NameError:       &lt;span class=&quot;comment&quot;&gt;# 拦截NameError异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &amp;#123;status&amp;#125;in the context.&quot;&lt;/span&gt;.format(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    status=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.in_context &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;not &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; CManager() &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ba:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ba.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# blahblah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; NameError                     &lt;span class=&quot;comment&quot;&gt;# 触发NameError异常，代码块后面的语句实际不会执行，而该异常会在__exit__函数中被拦截&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;k&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ba.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序输出:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m entering the context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m in the context.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m leaving the context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m not in the context.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2.7/library/stdtypes.html#index-37&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Context Manager Types - Python Doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/vamei/archive/2012/11/23/2772445.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python深入02 上下文管理器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/82494/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈 Python 的 with 语句&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 后记&lt;/h1&gt;
&lt;p&gt;这些小知识点平时只是粗略的看一下，只能达到会用的程度，有时候觉得只有自己整理一遍才能真正理解它们，才能熟练运用。&lt;br&gt;
所以…又填完一个坑。周末简单写写PyQt4吧…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近突发奇想，想写一个能改变当前输出环境，输出彩色文字的上下文管理器，于是学习了一下上下文管理。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="//blog.stdioa.com/categories/Python/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="上下文管理" scheme="//blog.stdioa.com/tags/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之virtualenv</title>
    <link href="//blog.stdioa.com/2015/10/learning-python-virtualenv/"/>
    <id>//blog.stdioa.com/2015/10/learning-python-virtualenv/</id>
    <published>2015-10-22T02:15:00.000Z</published>
    <updated>2015-12-20T02:22:28.361Z</updated>
    
    <content type="html">&lt;p&gt;用过virtualenv的人都说好，可是我没有具体使用过，所以尝试了一下，用完我也说好~233333&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;virtualenv是一个python库，用于创建独立python开发及运行环境。一般linux环境下如果在全局用pip安装模块时需要使用sudo命令，可是在共享主机上将root权限交给一般用户是不显示而且不安全的。可是有了virtualenv, 普通用户就可以创建一个虚拟环境，然后在虚拟环境中以普通用户权限安装模块，更改环境变量，进行开发和运行python程序而不会影响系统环境的环境变量和Python模块。&lt;/p&gt;
&lt;h1 id=&quot;2-virtualenv&quot;&gt;2. 创建virtualenv环境&lt;/h1&gt;
&lt;p&gt;输入&lt;code&gt;virtualenv venv&lt;/code&gt;创建名为venv的虚拟环境。
创建虚拟环境的常用选项：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;–no-site-packages 不使用系统中的site packages
–system-site-package 使用系统中的site packages &lt;em&gt;(据说是默认，但在我这默认是不使用的)&lt;/em&gt;
-p PYTHON_EXE, --python=PYTHON_EXE 使用指定的python解释器，这里的PYTHON_EXE在Windows下需要用绝对路径，比如C:\Python27\python.exe\&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，也可以使用虚拟环境和系统配置文件来设置virtualenv默认创建选项，详情见&lt;a href=&quot;http://virtualenv-chinese-docs.readthedocs.org/en/latest/#id7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;G:\&amp;gt;virtualenv venv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;New python executable in venv\Scripts\python.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Installing setuptools, pip, wheel...done.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 进入及退出虚拟环境&lt;/h1&gt;
&lt;p&gt;进入venv目录，Linux下输入&lt;code&gt;bin/activate&lt;/code&gt;, Windows下输入&lt;code&gt;Scripts\activate&lt;/code&gt;进入虚拟环境。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;G:\venv&amp;gt;Scripts\activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(venv) G:\venv&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进入环境后，输入&lt;code&gt;deactivate&lt;/code&gt;退出。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(venv) G:\venv&amp;gt;deactivate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;G:\venv&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 使用虚拟环境&lt;/h1&gt;
&lt;h2 id=&quot;41&quot;&gt;4.1 安装第三方模块&lt;/h2&gt;
&lt;p&gt;安装过程与平时相符（比如使用&lt;code&gt;pip install&lt;/code&gt;), 只不过安装后的包会存储在虚拟环境中。&lt;/p&gt;
&lt;h2 id=&quot;42&quot;&gt;4.2 设置环境变量&lt;/h2&gt;
&lt;p&gt;Linux下输入&lt;code&gt;export VAR1=&amp;quot;value1&amp;quot;&lt;/code&gt;, Windows下输入&lt;code&gt;set VAR1=value1&lt;/code&gt;来设置虚拟环境的环境变量&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(venv) C:\Users\Stdio\Desktop\temp\venv&amp;gt;set VAR1=value1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(venv) C:\Users\Stdio\Desktop\temp\venv&amp;gt;echo %VAR1%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;环境变量设置成功后，即可在Python程序中利用虚拟环境的环境变量进行程序配置（比如flask中的&lt;code&gt;app.config.from_envvar(&amp;quot;FLASK_SETTINGS&amp;quot;)&lt;/code&gt;）。该环境变量只在虚拟环境中有效，退出虚拟环境后环境变量即消失。&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://virtualenv.readthedocs.org/en/latest/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Virtualenv - virtualenv 13.1.2 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://virtualenv.readthedocs.org/en/latest/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Virtualenv - virtualenv 1.7.1.2.post1 documentation 中文版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://flask123.sinaapp.com/article/39/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualenv入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/tk091/p/3700013.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualenv – python虚拟沙盒&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nowamagic.net/academy/detail/1330228&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用virtualenv建立多个Python独立开发环境&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;6&quot;&gt;6. 后记&lt;/h1&gt;
&lt;p&gt;又填完一个坑，本来打算昨天就写好的，结果昨天没写完…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;用过virtualenv的人都说好，可是我没有具体使用过，所以尝试了一下，用完我也说好~233333&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="//blog.stdioa.com/categories/Python/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="virtualenv" scheme="//blog.stdioa.com/tags/virtualenv/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之logging</title>
    <link href="//blog.stdioa.com/2015/10/learning-python-logging/"/>
    <id>//blog.stdioa.com/2015/10/learning-python-logging/</id>
    <published>2015-10-21T08:00:00.000Z</published>
    <updated>2015-12-20T02:22:22.025Z</updated>
    
    <content type="html">&lt;p&gt;以前写代码的时候，所有信息包括调试信息全部输出在屏幕上，有的时候会看起来乱糟糟的，这时就需要logging模块来记录信息或生成日志文件。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;logging是一个用来记录日志信息的模块，它可以输出信息到stdout或者自定的日志文件中。&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 基本&lt;/h1&gt;
&lt;p&gt;输出信息：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;logging.debug(&lt;span class=&quot;string&quot;&gt;&quot;A debug message&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.info(&lt;span class=&quot;string&quot;&gt;&quot;A info message&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.warn(&lt;span class=&quot;string&quot;&gt;&quot;A warning message&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.error(&lt;span class=&quot;string&quot;&gt;&quot;A error message&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.critical(&lt;span class=&quot;string&quot;&gt;&quot;A critical message&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;日志级别：
logging默认的日志级别为WARNING，在当前级别下，只有warning及以上的日志可以被记录。logging的级别可通过&lt;code&gt;logging.basicConfig&lt;/code&gt;或&lt;code&gt;logging.setLevel&lt;/code&gt;来修改。级别大小关系为CRITICAL(50) &amp;gt; ERROR(40) &amp;gt; WARNING(30) &amp;gt; INFO(20) &amp;gt; DEBUG(10) &amp;gt; NOTSET(0), 需要注意的是，一旦记录信息，logging的日志级别就不可再更改。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;logging.basicConfig(level=logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;logging.info(&lt;span class=&quot;string&quot;&gt;&quot;Info&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO:root:Info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;logging.basicConfig(level=logging.DEBUG)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;logging.debug(&lt;span class=&quot;string&quot;&gt;&quot;Debug&quot;&lt;/span&gt;)                      &lt;span class=&quot;comment&quot;&gt;# 没有输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 日志格式设置及日志文件操作&lt;/h1&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.basicConfig(format=&lt;span class=&quot;string&quot;&gt;&quot;%(asctime)s %(levelname)s %(message)s&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        datefmt=&lt;span class=&quot;string&quot;&gt;&quot;%Y %b %d %H:%M:%S&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        filename=&lt;span class=&quot;string&quot;&gt;&quot;./log.log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        filemode=&lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;,               &lt;span class=&quot;comment&quot;&gt;# default is &quot;a&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        level=logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.log(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;a log&quot;&lt;/span&gt;)                  &lt;span class=&quot;comment&quot;&gt;# logging.log(level, msg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;log.log输出(可以用tail -f命令实时查看):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:36 INFO a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:37 WARNING a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:38 ERROR a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:41 CRITICAL a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:42 INFO a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:43 WARNING a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:44 ERROR a log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2015 Oct 21 14:41:45 CRITICAL a log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 将日志输出到多个流中&lt;/h1&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 可以通过logging.basicConfig设置一个默认流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console = logging.StreamHandler(stream=sys.stdout)                    &lt;span class=&quot;comment&quot;&gt;# 默认流为sys.stderr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.setLevel(logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formatter = logging.Formatter(&lt;span class=&quot;string&quot;&gt;&#39;%(name)-12s: %(levelname)-8s %(message)s&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.setFormatter(formatter)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.getLogger().addHandler(console)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files = logging.FileHandler(&lt;span class=&quot;string&quot;&gt;&quot;log2.log&quot;&lt;/span&gt;, mode=&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;, encoding=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;# 设置文件流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files.setLevel(logging.WARNING)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formatter = logging.Formatter(&lt;span class=&quot;string&quot;&gt;&quot;%(levelname)s %(message)s&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files.setFormatter(formatter)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.getLogger().addHandler(files)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logging.log(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, logging.getLevelName(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).lower())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;5-logger&quot;&gt;5. 设置多个logger以记录不同信息&lt;/h1&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding: utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log1 = logging.Logger(&lt;span class=&quot;string&quot;&gt;&quot;0.0&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console = logging.StreamHandler(sys.stdout)                               &lt;span class=&quot;comment&quot;&gt;# 默认流为sys.stderr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.setLevel(logging.INFO)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formatter = logging.Formatter(&lt;span class=&quot;string&quot;&gt;&#39;%(name)-12s: %(levelname)-8s %(message)s&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.setFormatter(formatter)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log1.addHandler(console)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log2 = logging.Logger(&lt;span class=&quot;string&quot;&gt;&quot;-.-&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files = logging.FileHandler(&lt;span class=&quot;string&quot;&gt;&quot;log2.log&quot;&lt;/span&gt;, mode=&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;, encoding=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;)     &lt;span class=&quot;comment&quot;&gt;# 设置文件流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files.setLevel(logging.WARNING)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formatter = logging.Formatter(&lt;span class=&quot;string&quot;&gt;&quot;%(name)s %(levelname)s %(message)s&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files.setFormatter(formatter)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log2.addHandler(files)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log1.log(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, logging.getLevelName(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).lower())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log2.log(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, logging.getLevelName(i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).lower())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.critical(&lt;span class=&quot;string&quot;&gt;&quot;AHHH! I&#39;m the root logger but you forget me!&quot;&lt;/span&gt;)        &lt;span class=&quot;comment&quot;&gt;# 默认使用logging时logger name为&quot;root&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging.getLogger(&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;).info(&lt;span class=&quot;string&quot;&gt;&quot;Of course not!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2.7/howto/logging.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Logging HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/dkblog/archive/2011/08/26/2155018.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python 的日志logging模块学习&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;6&quot;&gt;6. 后记&lt;/h1&gt;
&lt;p&gt;又填完一个坑，最近要填的坑好多…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以前写代码的时候，所有信息包括调试信息全部输出在屏幕上，有的时候会看起来乱糟糟的，这时就需要logging模块来记录信息或生成日志文件。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="//blog.stdioa.com/categories/Python/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="logging" scheme="//blog.stdioa.com/tags/logging/"/>
    
  </entry>
  
  <entry>
    <title>随手记之Git</title>
    <link href="//blog.stdioa.com/2015/10/essay-git/"/>
    <id>//blog.stdioa.com/2015/10/essay-git/</id>
    <published>2015-10-14T10:28:00.000Z</published>
    <updated>2016-01-06T07:15:23.755Z</updated>
    
    <content type="html">&lt;p&gt;从一年前开始使用Git, 一直没系统整理过Git的命令，前几天在部署代码的时候出了问题不知道该如何解决，于是决定整理一份Git的使用方法。本博文会持续更新。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1-git&quot;&gt;1. 什么是Git&lt;/h1&gt;
&lt;p&gt;Linus大神写的分布式版本控制工具，具体请访问官网&lt;a href=&quot;http://git-scm.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git-scm.com&lt;/a&gt;.
Wikipedia链接: &lt;a href=&quot;https://en.wikipedia.org/wiki/Git_(software)&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git (software)&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 基本操作&lt;/h1&gt;
&lt;p&gt;初始化版本仓库: &lt;code&gt;git init&lt;/code&gt;
从远程仓库克隆: &lt;code&gt;git clone [url] [repo_name]&lt;/code&gt;&lt;br&gt;
例: &lt;code&gt;git clone https://github.com/user/repo my_repo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pics/lifecycle.png&quot; alt=&quot;life-cycle&quot;&gt;&lt;/p&gt;
&lt;center&gt;&lt;small&gt;文件的状态变化周期&lt;/small&gt;&lt;/center&gt;
&lt;p&gt;检查文件状态: &lt;code&gt;git status&lt;/code&gt;
状态简览: &lt;code&gt;git status -s&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git status -s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; M README&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MM Rakefile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A  lib/git.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;M  lib/simplegit.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?? LICENSE.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;字母&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;所代表的状态&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;??&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;未追踪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;   M&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;已修改，未暂存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;MM&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;修改后暂存，然后又修改&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;新添加到暂存区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;M&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;修改后添加到暂存区&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;忽略文件： 编辑&lt;code&gt;.gitignore&lt;/code&gt;文件。&lt;br&gt;
文件 .gitignore 的格式规范如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有空行或者以 ＃ 开头的行都会被 Git 忽略。&lt;/li&gt;
&lt;li&gt;可以使用标准的 glob 模式匹配。&lt;/li&gt;
&lt;li&gt;匹配模式可以以（/）开头防止递归。&lt;/li&gt;
&lt;li&gt;匹配模式可以以（/）结尾指定目录。&lt;/li&gt;
&lt;li&gt;要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。
具体例子见&lt;a href=&quot;http://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%AE%B0%E5%BD%95%E6%AF%8F%E6%AC%A1%E6%9B%B4%E6%96%B0%E5%88%B0%E4%BB%93%E5%BA%93&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git-基础&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看尚未暂存的文件更新部分: &lt;code&gt;git diff&lt;/code&gt;
查看已暂存的文件更新的部分: &lt;code&gt;git diff --staged&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;提交更新: &lt;code&gt;git commit&lt;/code&gt;
&lt;code&gt;git commit -a&lt;/code&gt; = &lt;code&gt;git add --all; git commit&lt;/code&gt;
提交时输入单行信息(Commit log): &lt;code&gt;git commit -m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加文件: &lt;code&gt;git add [filename]&lt;/code&gt;, 使git跟踪文件
删除文件: &lt;code&gt;git rm [filename]&lt;/code&gt;, 使git停止跟踪文件并将文件删除
停止跟踪文件: &lt;code&gt;git rm --cached&lt;/code&gt;, 停止跟踪但不删除文件
移动文件: &lt;code&gt;git mv&lt;/code&gt;, 规则和&lt;code&gt;mv&lt;/code&gt;基本相同&lt;/p&gt;
&lt;p&gt;查看提交历史: &lt;code&gt;git log&lt;/code&gt;
显示每次提交的内容差异: &lt;code&gt;git log -p&lt;/code&gt;
查看每次提交的简略统计信息: &lt;code&gt;git log --stat&lt;/code&gt;
查看每次提交的代码更改详情：&lt;code&gt;git log --cc&lt;/code&gt;
显示ASCII图形表示的分支合并历史: &lt;code&gt;git log --graph&lt;/code&gt;
粗略显示: &lt;code&gt;git log --oneline --graph --decorate --all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更多请输入&lt;code&gt;git log --help&lt;/code&gt;查看man page.&lt;/p&gt;
&lt;p&gt;更改上次提交: &lt;code&gt;git commit --amend&lt;/code&gt;
取消暂存: &lt;code&gt;git reset HEAD [filename]&lt;/code&gt;
取消暂存并丢弃现有的更改: &lt;code&gt;git reset HEAD --hard [filename]&lt;/code&gt;, 未提交的更改会丢失
撤销对文件的更改: &lt;code&gt;git checkout -- [filename]&lt;/code&gt;, 未提交的更改会丢失&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push origin --delete [branch]&lt;/code&gt;, 删除远程分支&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 分支操作&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;git branch [branch]&lt;/code&gt;, 在当前引用上建立新分支
&lt;code&gt;git checkout -b [branch]&lt;/code&gt;, 建立新分支并检出到该分支上&lt;/p&gt;
&lt;p&gt;commit引用方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接hash引用: &lt;code&gt;d921970aadf03b3cf0e71becdaab3147ba71cdef&lt;/code&gt;, &lt;code&gt;d921970&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分支引用: &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相对引用: &lt;code&gt;HEAD^&lt;/code&gt;, &lt;code&gt;HEAD^^&lt;/code&gt;, &lt;code&gt;HEAD~2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若&lt;code&gt;a&lt;/code&gt;是一个合并提交，有两个父引用，则&lt;code&gt;a^&lt;/code&gt;为a的第一父引用，&lt;code&gt;a^2&lt;/code&gt;为a的第二父引用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;条件引用: &lt;code&gt;master@{yesterday}&lt;/code&gt;, &lt;code&gt;master@{1.week.before}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引用区间:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;refA..refB&lt;/code&gt;选择从refA和refB的共同祖先开始直到refB的所有提交。例:&lt;/li&gt;
&lt;/ul&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;若 1 - 2 - 3 - 4 ← refA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         \ 5 - 6 ← refB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;refA..refB 即为6 5, refB..refA 即为4 3.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin/master..master为master分支上还未提交到远端的所有引用&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;区间筛选，例：以下三条命令等价：
&lt;code&gt;$ git log refA..refB&lt;/code&gt;
&lt;code&gt;$ git log ^refA refB&lt;/code&gt;
&lt;code&gt;$ git log refB --not refA&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refA...refB&lt;/code&gt;选择出被两个引用中的一个包含但又不被两者同时包含的提交，即&lt;code&gt;refA..refB&lt;/code&gt;+&lt;code&gt;refB..refA&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git log --left-to-right refA...refB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 工作储藏&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;git stash &amp;quot;comments&amp;quot;&lt;/code&gt;, 储藏所有工作，包括已添加的和已更改未添加的
&lt;code&gt;git stash apply stash@{0}&lt;/code&gt;, 恢复储藏，可能会产生冲突，解决冲突后&lt;code&gt;git add&lt;/code&gt;添加
&lt;code&gt;git stash list&lt;/code&gt;, 列出储藏栈
&lt;code&gt;git stash show [stashname]&lt;/code&gt;, 查看储藏的更改
&lt;code&gt;git stash pop&lt;/code&gt;, 应用栈顶储藏并弹出储藏
&lt;code&gt;git stash drop [stashname]&lt;/code&gt;, 删除储藏
&lt;code&gt;git stash branch [branchname]&lt;/code&gt;, 应用储藏到某分支并切换到该分支
&lt;code&gt;git stash --keep-index&lt;/code&gt;, 只储藏已更改未添加的改动，不储藏 已添加的
&lt;code&gt;git stash --include-untracked&lt;/code&gt;, 储藏未追踪的文件（未追踪文件）并将其从工作目录中删除
&lt;code&gt;git stash --all&lt;/code&gt;, 贮藏所有文件&lt;/p&gt;
&lt;h1 id=&quot;5-git-reset&quot;&gt;5. git reset&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;git reset --soft HEAD^&lt;/code&gt;, 将HEAD指针及当前分支指针指向HEAD^, 工作目录中所有的文件均添加暂存(staged), 类似“撤销&lt;code&gt;git commit&lt;/code&gt;命令”，但如果重新提交，会创造一个hash不同的commit，即时提交内容完全相同。
&lt;code&gt;git reset --mixed HEAD^&lt;/code&gt;, 将HEAD指针及当前分支指针指向HEAD^, 工作目录中的更改未暂存(modified but not staged), 类似“撤销&lt;code&gt;git add&lt;/code&gt;和&lt;code&gt;git commit&lt;/code&gt;命令”
&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;, 将HEAD指针及当前分支指针指向HEAD^, 工作目录中的更改完全丢失，相当于“撤销更改, &lt;code&gt;git add&lt;/code&gt;和&lt;code&gt;git commit&lt;/code&gt;”.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从一年前开始使用Git, 一直没系统整理过Git的命令，前几天在部署代码的时候出了问题不知道该如何解决，于是决定整理一份Git的使用方法。本博文会持续更新。&lt;/p&gt;
    
    </summary>
    
      <category term="随手记" scheme="//blog.stdioa.com/categories/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
    
      <category term="Git" scheme="//blog.stdioa.com/tags/Git/"/>
    
      <category term="编程工具" scheme="//blog.stdioa.com/tags/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>随手记 - 用国内镜像加速pip</title>
    <link href="//blog.stdioa.com/2015/09/essay-pip-acceleration/"/>
    <id>//blog.stdioa.com/2015/09/essay-pip-acceleration/</id>
    <published>2015-09-29T15:01:00.000Z</published>
    <updated>2015-12-20T02:21:47.485Z</updated>
    
    <content type="html">&lt;p&gt;原来Windows和Linux更改镜像源的方式是不一样的啊。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 引子&lt;/h1&gt;
&lt;p&gt;偶然发现USTC有一个pypi的源(&lt;a href=&quot;http://mirrors.ustc.edu.cn/pypi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在这里&lt;/a&gt;)，照着USTC给的&lt;a href=&quot;https://lug.ustc.edu.cn/wiki/mirrors/help/pypi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;镜像使用帮助&lt;/a&gt;更改镜像源无果。今天闲来无事就多搜了一下。&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 过程&lt;/h1&gt;
&lt;p&gt;USTC的镜像使用帮助里说，将&lt;code&gt;index-url = https://pypi.mirrors.ustc.edu.cn/simple&lt;/code&gt;添加到&lt;code&gt;~/.pip/pip.conf&lt;/code&gt;文件中，按照此思路看，如果我在Windows下使用的话，应该将配置信息添加到&lt;code&gt;C:\Users\Stdio\.pip\pip.conf&lt;/code&gt;文件中。然而添加后并没有什么卵用。今天看见一个&lt;a href=&quot;http://blog.csdn.net/sasoritattoo/article/details/10020547&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博文&lt;/a&gt;说文件设置路径应为&lt;code&gt;%HOME%\pip\pip.ini&lt;/code&gt;，于是试了一下（绝对路径为&lt;code&gt;C:\Users\Stdio\pip\pip.ini&lt;/code&gt;），成功。用了USTC的源，装个软件速度简直飞起︿(￣︶￣)︿&lt;br&gt;
弄好以后多了个心眼，去看看官方怎么说，于是找到了pip的Documentation（&lt;a href=&quot;https://pip.pypa.io/en/stable/user_guide/#configuration&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在这里&lt;/a&gt;）里面讲述了配置文件所在位置。&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Config file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip allows you to set all command line option defaults in a standard ini style config file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The names and locations of the configuration files vary slightly across platforms. You may have per-user, per-virtualenv or site-wide (shared amongst all users) configuration:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Per-user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Unix the default configuration file is: $HOME/.config/pip/pip.conf which respects the XDG&lt;span class=&quot;emphasis&quot;&gt;_CONFIG_&lt;/span&gt;HOME environment variable.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Mac OS X the configuration file is $HOME/Library/Application Support/pip/pip.conf.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Windows the configuration file is %APPDATA%\pip\pip.ini.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;There are also a legacy per-user configuration file which is also respected, these are located at:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Unix and Mac OS X the configuration file is: $HOME/.pip/pip.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Windows the configuration file is: %HOME%\pip\pip.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You can set a custom path location for this config file using the environment variable PIP&lt;span class=&quot;emphasis&quot;&gt;_CONFIG_&lt;/span&gt;FILE.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Inside a virtualenv:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Unix and Mac OS X the file is $VIRTUAL_ENV/pip.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On Windows the file is: %VIRTUAL_ENV%\pip.ini&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;于是自己将配置文件放在了&lt;code&gt;%APPDATA%\pip\pip.ini&lt;/code&gt;，即&lt;code&gt;C:\Users\Stdio\AppData\Roaming\pip\pip.ini&lt;/code&gt;下，经实验，加速成功。
经测试，系统层面的全局设置会影响到virtualenv建立的虚拟环境设置，所以可以通过设置虚拟环境的配置文件来更改虚拟环境设置，设置文件就放在虚拟环境根目录下就好了。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 瞎写&lt;/h1&gt;
&lt;p&gt;改了软件源以后为了做测试升级了numpy，然后编译用了半天中间电脑卡到死，现在它还在我的腿上发烫真是伤不起- -&lt;br&gt;
写的东西越来越没有营养了，就当是写着玩顺带积累一下知识吧。如果不出意外的话，下一篇应该是关于Python Qt Creater和Qt GUI设计的小文章0.0也许是virtualenv的随手记吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原来Windows和Linux更改镜像源的方式是不一样的啊。&lt;/p&gt;
    
    </summary>
    
      <category term="随手记" scheme="//blog.stdioa.com/categories/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
    
      <category term="python" scheme="//blog.stdioa.com/tags/python/"/>
    
      <category term="pip" scheme="//blog.stdioa.com/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>点点技能点之Ajax</title>
    <link href="//blog.stdioa.com/2015/09/essay-ajax/"/>
    <id>//blog.stdioa.com/2015/09/essay-ajax/</id>
    <published>2015-09-22T13:07:00.000Z</published>
    <updated>2015-12-20T02:21:41.907Z</updated>
    
    <content type="html">&lt;p&gt;之前自己没怎么写过前端，一直以为Ajax写起来很麻烦，也没怎么接触Ajax，今天写了个小网页用到了Ajax，感觉它并不是想象的那么复杂，写完网页随手总结一下。（喂我这个技能点是不是点的太晚了啊！）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 引子&lt;/h1&gt;
&lt;p&gt;没啥可写的…&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 科普&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://www.w3school.com.cn/ajax/index.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3School - Ajax教程&lt;/a&gt;，就这个吧，科普完毕。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 笔记&lt;/h1&gt;
&lt;h2 id=&quot;31-ajax&quot;&gt;3.1 Ajax的特点&lt;/h2&gt;
&lt;p&gt;Ajax为Asynchronous Javascript And XML的缩写，即异步JS与XML，因为它具有异步特性，所以我们可以在网页加载中或加载结束的任意时刻使用，通过与服务器进行少量数据交换来实现网页异步更新。利用Ajax可以直接更改网页的一部分来动态刷新网页，而不需要刷新整个网页。&lt;/p&gt;
&lt;h2 id=&quot;32&quot;&gt;3.2 使用方法——原生方式&lt;/h2&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ajax = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();                  &lt;span class=&quot;comment&quot;&gt;// IE6不能用这个方式，不管它了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ajax.readyState==&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; ajax.status==&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something with ajax.responseText&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 还有一个ajax.responseXML, 也不管它了，json大法好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(ajax.responseText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax.open(&lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;./get?var1=val1&amp;amp;var2=val2&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);     &lt;span class=&quot;comment&quot;&gt;// 异步方式运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax.send();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ajax = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax.open(&lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;./post&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);                      &lt;span class=&quot;comment&quot;&gt;// 同步方式运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;Content-type&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax.send(&lt;span class=&quot;string&quot;&gt;&quot;var1=val1&amp;amp;var2=val2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// do something with ajax.responseText&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(ajax.responseText);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;33-jquery-ajax&quot;&gt;3.3 原生的好麻烦！——jQuery Ajax&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://jquery.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery&lt;/a&gt;，棒棒的前端库，不多说。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// $.get(URL, callback)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.get(&lt;span class=&quot;string&quot;&gt;&quot;./get?var1=val1&amp;amp;var2=val2&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data, status&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something with data &amp;amp; status&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// $.post(URL,data,callback)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.post(&lt;span class=&quot;string&quot;&gt;&quot;./post&quot;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var1: &lt;span class=&quot;string&quot;&gt;&quot;val1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var2: &lt;span class=&quot;string&quot;&gt;&quot;val2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data, status&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something with data &amp;amp; status&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// $.getJSON(url, data, success(data,status,xhr))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// data和回调函数success可选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// success中，data参数必需，其它可选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.getJSON(&lt;span class=&quot;string&quot;&gt;&quot;./get&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do something with data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 附带的小零碎&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;window.setInterval(getData, time);&lt;/code&gt;用于实现轮询。&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. 总结 &amp;amp; 后记&lt;/h1&gt;
&lt;p&gt;Ajax简单实用功能强大应用广泛，通过简单的步骤实现前后端的数据交换，来实现网页的动态加载。&lt;br&gt;
开学到现在感觉一直不在状态（实在是想吐槽自己的一群神一样的舍友），今天找了个安静的、没人打扰的地方认认真真写了写代码，总结了一下自己到现在所学的知识才发现自己学的东西是如此零散、不成体系，仿佛从大一开始就在乱点技能点。这一年要多深入学习一个特定方面的知识（暂定后端开发），多写代码积累经验，不能再东学一点西学一点了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前自己没怎么写过前端，一直以为Ajax写起来很麻烦，也没怎么接触Ajax，今天写了个小网页用到了Ajax，感觉它并不是想象的那么复杂，写完网页随手总结一下。（喂我这个技能点是不是点的太晚了啊！）&lt;/p&gt;
    
    </summary>
    
      <category term="网络" scheme="//blog.stdioa.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Ajax" scheme="//blog.stdioa.com/tags/Ajax/"/>
    
      <category term="前端开发" scheme="//blog.stdioa.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>在Windows中使用Wget</title>
    <link href="//blog.stdioa.com/2015/09/using-wget-in-Windows/"/>
    <id>//blog.stdioa.com/2015/09/using-wget-in-Windows/</id>
    <published>2015-09-18T12:07:00.000Z</published>
    <updated>2016-01-06T07:15:23.258Z</updated>
    
    <content type="html">&lt;p&gt;一直心心念念想在Windows里用wget，今天随便搞了搞，在Windows里面用上了wget，终于可以下载一些乱七八糟的小文件辣。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 引子&lt;/h1&gt;
&lt;p&gt;一直觉得Windows里面应该有一个类似wget的工具。今天想从github上下一个文件，结果文件直接以文本方式返回了(响应头的Content-Type为text/plain而不是application神马的)，自己很怨念，觉得要是Windows能像linux一样有个用来wget神马的下载文件的命令就好了…所以自己上网搜了一下，让自己用上了wget.&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 乱搞&lt;/h1&gt;
&lt;p&gt;随便百度，找到一篇博文，又找到了一个叫做GnuWin(&lt;a href=&quot;http://sourceforge.net/projects/gnuwin32/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/projects/gnuwin32/&lt;/a&gt;)的项目，该项目主要提供Windows下的GNU工具，比如sed, grep, wget等等。于是下载安装，安装程序默认将程序安装在了C:\Program Files (x86)\GnuWin32\bin目录下。然而即使这样，我还是无法直接在命令行里使用。&lt;/p&gt;
&lt;p&gt;Windows中有一个“PATH环境变量”，将某目录（比如C:\Python27）添加进PATH环境变量中，就可以直接在命令行中输入命令打开该目录下的文件。如果想在命令行中使用wget的话，把C:\Program Files (x86)\GnuWin32\bin目录添加进PATH变量中当然可行。但是这样的话，随着工具越来越多，PATH变量里面的路径也就越来越多，维护起来也会更加困难，所以自己使用了一种特殊的方法：在C盘的目录下建了一个Command_line_programs文件夹用来放一些自己常用的命令行工具（比如sqlite），然后将C:\Command_line_programs（以下简称C.L.P.）添加到PATH变量中，这样自己就能使用C.L.P.文件夹中的工具。可是，自己已经将程序安装到Program Files里了，所以需要想个办法在C.L.P.文件中新建一个文件来连接到wget程序。_经过尝试，使用快捷方式的方法失败了。_所以自己想到了&lt;strong&gt;新建批处理文件&lt;/strong&gt;。于是在C.L.P.文件夹中新建wget.bat, 内容为&lt;code&gt;C:\&amp;quot;Program Files (x86)&amp;quot;\GnuWin32\bin\wget.exe %*&lt;/code&gt; （&lt;code&gt;%*&lt;/code&gt;表示在命令中嵌入程序所有参数，详情请百度或Google Windows批处理编程），保存，在命令行中尝试使用wget，成功。&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 然而这并没有什么卵用啊！&lt;/h1&gt;
&lt;p&gt;自己搞完以后，盯着GnuWin这几个字，突然想到了git里面自带了很多GNU工具可以直接使用，于是就去git/bin的目录翻了翻，果然，里面没有wget，然而我看到了curl。然后…就没有然后了。&lt;img src=&quot;/pics/hands_up_crying.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 后记&lt;/h1&gt;
&lt;p&gt;这篇文章是胡乱凑数的，最近学习兴趣不高，又有一堆乱七八糟的事情要忙，所以托更了好久T^T
好了好了要好好学习，说好了多去体验框架呢QAQ&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一直心心念念想在Windows里用wget，今天随便搞了搞，在Windows里面用上了wget，终于可以下载一些乱七八糟的小文件辣。&lt;/p&gt;
    
    </summary>
    
      <category term="乱七八糟" scheme="//blog.stdioa.com/categories/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="Windows" scheme="//blog.stdioa.com/tags/Windows/"/>
    
      <category term="wget" scheme="//blog.stdioa.com/tags/wget/"/>
    
  </entry>
  
  <entry>
    <title>搭建私有KMS服务器</title>
    <link href="//blog.stdioa.com/2015/09/building-a-private-kms-server/"/>
    <id>//blog.stdioa.com/2015/09/building-a-private-kms-server/</id>
    <published>2015-09-02T14:26:00.000Z</published>
    <updated>2015-12-20T02:21:36.423Z</updated>
    
    <content type="html">&lt;p&gt;最近win10又频繁提示“许可即将过期”，之前找到的kms服务器又挂掉了，于是就决定自己搭一个自己用。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1&quot;&gt;1. 引子&lt;/h1&gt;
&lt;p&gt;好久没更新日志了，暑假在家每天过的乱七八糟，就没怎么研究技术，于是博客也没怎么更新…今天随便写点什么凑个数_(:зゝ∠)_&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 科普&lt;/h1&gt;
&lt;p&gt;KMS (Key Management Service), 密钥管理服务，是一种对Windows及Office产品进行批量授权的服务，通常被部署在大型企业局域网中，用于对批量授权版（即VOL版）Windows系统进行大批量的激活。KMS服务器的作用是给局域网中的所有计算机的操作系统提供一个有效的产品序列号，然后计算机里面的KMS服务就会自动将系统激活。每一个由KMS Server提供的序列号的有效期只有180天，而不是其他版本的永久使用一个序列号。所以操作者必须在快到期的时候在此手动连接KMS服务器让它提供一个新的序列号，否则180天以后就会回到试用版本状态。由于KMS系统部署较为容易，所以在国内很多人通过MSDN等渠道下载VOL版本的软件，然后通过KMS服务进行激活，已达到盗版的目的。&lt;/p&gt;
&lt;h1 id=&quot;3-luangao&quot;&gt;3. 搭(luan)建(gao)过程&lt;/h1&gt;
&lt;p&gt;昨天在满大街乱找野生KMS服务器的时候发现了一个帖子：&lt;a href=&quot;http://wrlog.com/activate-kms-vlmcsd.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用KMS激活windows系统及VL-office系列&lt;/a&gt;, 里面提供了一个&lt;a href=&quot;http://forums.mydigitallife.info/threads/50234-Emulated-KMS-Servers-on-non-Windows-platforms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;指向一个帖子，帖子中提供了Python和C版本的KMS服务器模拟器，可以在自己的服务器中进行KMS服务器部署。于是把代码搞了下来（为此还注册了个账号, python版的代码在&lt;a href=&quot;https://mega.co.nz/#F!6pIGEbhQ!DE2twA7dVG5C4knjAq56zQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;)，用VSFTP将代码传到了自己的树莓派上，然后运行&lt;code&gt;python server.py&lt;/code&gt;进行部署。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python server.py
TCP server listening at 0.0.0.0 on port 1688.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在Windows系统中打开具有管理员权限的命令提示符，输入&lt;code&gt;slmgr -skms 192.168.155.2:1688&lt;/code&gt;设置KMS服务器地址（地址可以更换），然后输入`slmgr -ato’进行系统激活，此时服务器端显示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Connection accepted: 192.168.56.1:13023
Received V6 request on Wed Sep  2 22:59:55 2015.
Connection closed: 192.168.56.1:13023
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows系统提示“成功地激活了产品”，激活成功。&lt;/p&gt;
&lt;p&gt;在树莓派上部署成功以后，随手在VPS上部署了一份以备用。帖子中提了一种设置Linux系统启动项来使KMS服务器开机自动部署的方法，不过自己没有这个需求就没搞。&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 总结&lt;/h1&gt;
&lt;p&gt;这篇文章好像有点水，主要是因为自己实在没什么东西写了…自己的暑假过的乱七八糟，浪费了很多时间在游戏上，没什么心情研究技术。现在开学了，有更多时间来钻研技术了，收收心找找状态，以后博客会定期更新的，我对树莓派电源灯发誓→_→&lt;/p&gt;
&lt;h1 id=&quot;5-key&quot;&gt;5. 各种Key&lt;/h1&gt;
&lt;p&gt;最后附上Office 2016和Windows 10的VOL版激活码，其它版本软件激活码请自行百度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Office Professional Plus 2016 - XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99
Office Standard 2016 - JNRGM-WHDWX-FJJG3-K47QV-DRTFM
Project Professional 2016 - YG9NW-3K39V-2T3HJ-93F3Q-G83KT
Project Standard 2016 - GNFHQ-F6YQM-KQDGJ-327XX-KQBVC
Visio Professional 2016 - PD3PC-RHNGV-FXJ29-8JK7D-RJRJK
Visio Standard 2016 - 7WHWN-4T7MP-G96JF-G33KR-W8GF4
Access 2016 - GNH9Y-D2J4T-FJHGG-QRVH7-QPFDW
Excel 2016 - 9C2PK-NWTVB-JMPW8-BFT28-7FTBF
OneNote 2016 - DR92N-9HTF2-97XKM-XW2WJ-XW3J6
Outlook 2016 - R69KK-NTPKF-7M3Q4-QYBHW-6MT9B
PowerPoint 2016 - J7MQP-HNJ4Y-WJ7YM-PFYGF-BY6C6
Publisher 2016 - F47MM-N3XJP-TQXJ9-BP99D-8K837
Skype for Business 2016 - 869NQ-FJ69K-466HW-QYCP2-DDBV6
Word 2016 - WXY84-JN2Q9-RBCCQ-3Q3J3-3PFJ6&lt;/p&gt;
&lt;p&gt;Windows 10 Home - TX9XD-98N7V-6WMQ6-BX7FG-H8Q99
Windows 10 Home N - 3KHY7-WNT83-DGQKR-F7HPR-844BM
Windows 10 Home Single Language - 7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH
Windows 10 Home Country Specific - PVMJN-6DFY6-9CCP6-7BKTT-D3WVR
Windows 10 Professional - W269N-WFGWX-YVC9B-4J6C9-T83GX
Windows 10 Professional N - MH37W-N47XK-V7XM9-C7227-GCQG9
Windows 10 Education - NW6C2-QMPVW-D7KKK-3GKT6-VCFB2
Windows 10 Education N - 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ
Windows 10 Enterprise - NPPR9-FWDCX-D2C8J-H872K-2YT43
Windows 10 Enterprise N - DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4
Windows 10 Enterprise 2015 LTSB - WNMTR-4C88C-JK8YV-HQ7T2-76DF9
Windows 10 Enterprise 2015 LTSB N - 2F77B-TNFGY-69QQF-B8YKP-D69TJ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;可以考虑有空搞一个Office 2016来玩玩。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;6&quot;&gt;6. 参考文档&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.baike.com/wiki/KMS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KMS - 互动百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wrlog.com/activate-kms-vlmcsd.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用KMS激活windows系统及VL-office系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://forums.mydigitallife.info/threads/50234-Emulated-KMS-Servers-on-non-Windows-platforms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emulated KMS Servers on non-Windows platforms&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近win10又频繁提示“许可即将过期”，之前找到的kms服务器又挂掉了，于是就决定自己搭一个自己用。&lt;/p&gt;
    
    </summary>
    
      <category term="乱七八糟" scheme="//blog.stdioa.com/categories/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="KMS" scheme="//blog.stdioa.com/tags/KMS/"/>
    
  </entry>
  
  <entry>
    <title>LAMP环境搭建心得</title>
    <link href="//blog.stdioa.com/2015/07/deploy-a-LAMP-environment/"/>
    <id>//blog.stdioa.com/2015/07/deploy-a-LAMP-environment/</id>
    <published>2015-07-09T12:05:00.000Z</published>
    <updated>2016-01-06T07:15:24.302Z</updated>
    
    <content type="html">&lt;p&gt;闲来无事，在虚拟机上搭了一个LAMP服务器环境，把安装及配置过程记了下来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1&quot;&gt;1. 引子&lt;/h2&gt;
&lt;h3 id=&quot;11&quot;&gt;1.1 环境版本&lt;/h3&gt;
&lt;p&gt;此次搭建的LAMP环境版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 14.04 LTS&lt;/li&gt;
&lt;li&gt;Apache 2.4.7&lt;/li&gt;
&lt;li&gt;mysql 5.6.19&lt;/li&gt;
&lt;li&gt;php 5.5.9&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;12-hucheyitong&quot;&gt;1.2 写(hu)在(che)开(yi)头(tong)&lt;/h3&gt;
&lt;p&gt;额…其实没什么好说的，自己一直想自己动手搭建、配置一个服务器，暑假之前师太（别问是谁）说如果要搞安全的话最好先自己从头搭一个服务器，把各种服务弄清楚，对整个架构有一个系统的理解，这样再深入搞安全的话接受一些观念也会更快更容易；但是因为自己太懒，再加上上学期忙成狗（其实还是太懒），一直没有去做这件事。暑假在一个小公司做软件测试，每天好像也没什么事干，有大把的时间做自己的事情，于是自己用了一中午加半个下午的时间照着一份&lt;a href=&quot;http://segmentfault.com/q/1010000002397754&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;指南&lt;/a&gt;把它搭好了。 &lt;em&gt;不过话说回来，软件测试真的很无聊&lt;/em&gt;_(:зゝ∠)_&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2&quot;&gt;2. 科普&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/LAMP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LAMP&lt;/a&gt;: &lt;a href=&quot;https://zh.wikipedia.org/wiki/Linux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux&lt;/a&gt; + &lt;a href=&quot;https://zh.wikipedia.org/wiki/Apache_HTTP_Server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache&lt;/a&gt; + &lt;a href=&quot;https://zh.wikipedia.org/wiki/MySQL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mysql&lt;/a&gt; + &lt;a href=&quot;https://zh.wikipedia.org/wiki/PHP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PHP&lt;/a&gt;&lt;br&gt;
科普结束。&lt;br&gt;
刚看到LAMP里面的P还能指Python 0.0&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;3&quot;&gt;3. 搭建过程&lt;/h2&gt;
&lt;h3 id=&quot;31&quot;&gt;3.1 安装&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Linux&lt;br&gt;
我手上现在没实体机了，只有一个树莓派，我也不想每天带着它去上班，何况AMD架构上面软件好像少一点点，更何况树莓派性能挺差的（此处省略一坨借口），所以我只用Virtual Box装了一个虚拟机。
说到Linux，选一个用起来比较舒服的的发行版还是挺重要的。Linux发行版众多，一般用Red Hat或者CentOS（RH的社区版）或者Ubuntu Server来做服务器，不过…这学期用Debian系发行版用习惯了，再换到RH系的感觉有点不适应，于是我选择了Ubuntu Server. 当然，如果你想锻炼一下，推荐使用Arch Linux来搭建服务器。&lt;br&gt;
下载Linux镜像，搭虚拟机，配置虚拟网络&amp;amp;SSH，更改软件源，更新软件，配置自己需要的vim &amp;amp; tmux &amp;amp; vsftpd，不多说，想详细了解的可以去看某Linux虚拟机安装及配置指南（代号&lt;a href=&quot;http://cslab.nju.edu.cn/ics/index.php/Ics:2013/PA0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PA0&lt;/a&gt;）。上学期装Linux装了绝不下10遍，再说下去自己都要吐了。&lt;br&gt;
不过值得一提的是，Ubuntu Server安装程序的用户体验简直棒，安装过程中有一步是设置键盘布局，以前都要自己去一个长长的列表里翻自己的键盘布局（通常是US），而Ubuntu Server提供了一个小脚本来进行自动检测：依照提示敲几个字母/符号，再回答一个问题，安装程序会自动检测出适合你的键盘布局。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache
输入&lt;code&gt;apt-get install apache2&lt;/code&gt;命令安装apache.
安装过程中apache服务已经启动，如果未启动，则输入&lt;code&gt;service apache2 start&lt;/code&gt;启动apache服务。
启动后访问服务器ip，会出现apache的测试页面。&lt;br&gt;
&lt;img src=&quot;/pics/apache.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL
输入&lt;code&gt;apt-get install mysql-server-5.6 mysql-client-5.6&lt;/code&gt;进行安装。
安装过程中需要输入MySQL root密码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PHP
输入&lt;code&gt;apt-get install php5 libapache2-mod-php5&lt;/code&gt;安装php, 安装过后需要输入&lt;code&gt;service apache2 restart&lt;/code&gt;重启apache服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;32&quot;&gt;3.2 配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装phpMyAdmin&lt;br&gt;
输入&lt;code&gt;apt-get install phpmyadmin&lt;/code&gt;进行安装，安装的时候会提示输入mysql的root密码，并且提示新建一个数据库，当然也可以按需求不新建。&lt;br&gt;
安装好以后访问http://localhost/phpmyadmin/index.php ，登录之后页面下方会有警告“缺少 mcrypt 扩展。请检查 PHP 配置。”此时按照指南的方法做没有效果，经百度+Google后找到了解决方案：安装php5-mcrypt后，更改php.ini后问题未解决，根据&lt;a href=&quot;http://php.net/manual/en/mcrypt.setup.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方的mcrypt安装指南&lt;/a&gt;，输入&lt;code&gt;php5enmod mcrypt&lt;/code&gt;后，问题解决。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL命令行无法启动&lt;br&gt;
注：这段是自己瞎折腾的，啥都没看就乱玩遇到的问题。
输入mysql后遇到问题：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  ~  mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1045 (28000): Access denied for user &amp;apos;stdio&amp;apos;@&amp;apos;localhost&amp;apos; (using password: NO)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;尝试用root权限运行，得到同样的结果。&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  ~  sudo mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1045 (28000): Access denied for user &amp;apos;root&amp;apos;@&amp;apos;localhost&amp;apos; (using password: NO)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一番百度+google+SegmentFault后，找到正确进入命令行的姿势：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  ~  sudo mysql -u root -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter password:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Welcome to the MySQL monitor.  Commands end with ; or \g.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your MySQL connection id is 55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Server version: 5.6.19-0ubuntu0.14.04.1 (Ubuntu)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Oracle is a registered trademark of Oracle Corporation and/or its&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;affiliates. Other names may be trademarks of their respective&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;owners.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type &amp;apos;help;&amp;apos; or &amp;apos;\h&amp;apos; for help. Type &amp;apos;\c&amp;apos; to clear the current input statement.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;设置Apache虚拟目录&lt;br&gt;
把所有文件全部放在/var/www下真的好麻烦，何况普通账户没有/var/www的写权限，所以设置一个alias，将某个Apache虚拟目录映射到home目录下，以后操作起来就会方便很多。
修改/etc/apache2/mods-enabled/alias.conf文件，添加如下行，然后重启Apache服务：&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Alias /web &amp;quot;/home/stdio/websites/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory &amp;quot;/home/stdio/websites/&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Options None &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowOverride None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Order allow,deny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Allow from all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而在我访问http://localhost/web时，却得到了503 Forbidden的状态码，各种乱访问无果，于是在网上乱搜解决方案，有让改httpd的（httpd跟Apache有啥关系），有改alias配置的（我的alias配置的没有问题啊），最后看到了一个方案，查看apache2.conf的目录权限配置。
修改/etc/apache2/apache2.conf文件，发现以下设置：&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Options FollowSymLinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowOverride None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require all denied&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory /usr/share&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowOverride None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require all granted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory /var/www/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Options Indexes FollowSymLinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowOverride None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require all granted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为Apache的默认配置是不能访问/的，所以我没有对~/websites的访问权限（这里逻辑好混乱）。添加配置：&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory /home/stdio/websites&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Options FollowSymLinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowOverride None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require all granted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重启Apache服务，&lt;a href=&quot;http://localhost/web%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%9D%87%E5%8F%AF%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%E3%80%82&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost/web目录下的文件均可正常访问。&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&quot;4&quot;&gt;4. 乱搞&lt;/h2&gt;
&lt;p&gt;去年开学的时候用php写过一个小的文件浏览器（就像Apache自带的文件服务器那样的），闲得无聊想把它部署到自己刚搭好的服务器上，看看能不能正常运行，于是就把文件传到服务器上访问，&lt;strong&gt;不出意外，失败了&lt;/strong&gt;。然后就找呀找呀找bug，找到一个小bug（请自动脑补背景音乐），找了半个点最后发现，在从配置文档读取根目录路径的时候，会在目录结尾加一个空格（现在想起来觉得应该是^M）导致路径拼接时出错，于是在$rootpath前面加了trim，然后就好了…我真是能作_(:зゝ∠)_&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;5&quot;&gt;5. 总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;自己动手搭建LAMP环境还是一件挺有意思的事情，遇到问题自己去找答案自己解决，最后所有的服务全都正常运行时还是有一点点成就感的~&lt;/li&gt;
&lt;li&gt;半年没碰PHP，一共就写了不到10行代码，还写错了一半，比如把&lt;code&gt;phpinfo()&lt;/code&gt;写成&lt;code&gt;php_info&lt;/code&gt;，忘了在&lt;code&gt;&amp;lt;?&lt;/code&gt;后面加php神马的…（我记得以前谁跟我说&lt;code&gt;&amp;lt;?&lt;/code&gt;后面可以不加php的啊）&lt;/li&gt;
&lt;li&gt;一篇文章写了一晚上。好久没写过博文了，写这篇文章主要是把自己的经验记下来，如果这篇文章可以帮到谁的话，那当然更好~&lt;/li&gt;
&lt;li&gt;Linux挺好玩的，比软件测试好玩多了！（果然到了最后还是要黑一把测试）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&quot;6&quot;&gt;6. 参考文档&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://segmentfault.com/a/1190000000619342&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu下搭建LAMP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/mcrypt.setup.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PHP Mcrypt Installing/Configuring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.douban.com/note/410696698/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;apache服务出现Forbidden 403问题的解决方法总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://segmentfault.com/q/1010000000263069&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ERROR 1045 (28000): Access denied for user ‘root’@‘localhost’ (using password: NO)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;闲来无事，在虚拟机上搭了一个LAMP服务器环境，把安装及配置过程记了下来。&lt;/p&gt;
    
    </summary>
    
      <category term="网络" scheme="//blog.stdioa.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Linux" scheme="//blog.stdioa.com/tags/Linux/"/>
    
      <category term="Apache" scheme="//blog.stdioa.com/tags/Apache/"/>
    
      <category term="MySQL" scheme="//blog.stdioa.com/tags/MySQL/"/>
    
      <category term="PHP" scheme="//blog.stdioa.com/tags/PHP/"/>
    
  </entry>
  
</feed>
